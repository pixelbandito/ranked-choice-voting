{"version":3,"sources":["model/ActivePollIdContext.js","ActivePollChooser/index.js","ActivePollIdProvider/index.js","PollForm/Form/index.js","PollForm/Form/Form.js","model/candidate.js","model/poll.js","PollForm/Provider/Provider.js","PollForm/Provider/index.js","PollForm/index.js","Ballot/Ballot.js","Ballot/index.js","PollsProvider/PollsProvider.js","PollsProvider/index.js","BallotsProvider/index.js","Results/Results.js","Results/index.js","Body/index.js","Body/Body.js","App.js","serviceWorker.js","index.js"],"names":["ActivePollIdContext","React","createContext","ActivePollChooser","_ref","polls","setActivePollId","handleChange","_ref2","value","target","sortedPolls","Object","values","sort","a","b","name","localeCompare","react_default","createElement","model_ActivePollIdContext","Consumer","activePollId","onChange","disabled","map","poll","key","id","ActivePollIdProvider","children","passedProps","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","dateUpdated","newestPollId","length","console","log","Children","child","Provider","isValidElement","cloneElement","objectSpread","Form","getCandidateById","candidateId","candidates","find","candidate","getCandidateByName","candidateName","getAddCandidateDisabled","_this$props","_this","props","activePoll","newCandidateName","submitAddCandidateForm","event","stopPropagation","preventDefault","addCandidate","_this$props2","onChangeNewCandidateName","onChangePoll","concat","toConsumableArray","shortid","generate","handleChangeNewCandidateNameInput","handleCancelForm","revertPoll","handleSubmitForm","_this$props3","onSubmitPoll","renderNewCandidateForm","onSubmit","htmlFor","placeholder","type","handleChangeCandidateNameInput","prevCandidate","_this$props4","nextCandidateName","nextCandidates","splice","indexOf","renderCandidates","currentCandidates","handleChangePollNameInput","_this$props5","nextName","handleChangeEnabledCheckbox","_this$props6","enabled","checked","this","onClick","Component","propTypes","PropTypes","string","isRequired","defaultProps","dateCreated","Date","valueOf","generatePoll","arrayOf","shape","candidatePropTypes","number","bool","state","prevContext","context","updateActivePoll","nextPolls","prevActivePollId","prevProps","nextActivePoll","Error","setState","handleSubmitPoll","setPoll","handleChangeNewCandidateName","handleChangePoll","_this2","_this$state","entries","constructor","Fragment","onRevertPoll","handleRevertPoll","contextType","ConnectedPollForm","PollForm_Provider","PollForm_Form","Ballot","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","ballots","candidateRanks","voterName","updateShuffledCandidatesFromProps","_ref$forceUpdate","forceUpdate","prevActivePoll","_nextActivePoll$candi","_prevActivePoll$candi","prevCandidates","stateUpdates","JSON","stringify","shuffledCandidates","Math","random","keys","onChangeCandidateRankInput","prevCandidateRanks","nextRank","nextCandidateRanks","handleChangeVotertNameInput","handleSubmitBallotForm","addBallot","_activePoll$id","pollId","dateSubmitted","submitted","inherits","createClass","_this$state2","_ref2$candidates","i","min","max","step","getPollsFromLocalStorage","savedPolls","window","localStorage","getItem","parse","e","warn","PollsProvider","setPolls","pollsString","setItem","prevPolls","defineProperty","defaultBallot","className","BallotsProvider","setBallots","ballotsString","ballot","prevBallots","getBallotsFromLocalStorage","savedBallots","Results","errorMessage","winnerIds","updateActivePollFromProps","calculateWinner","handleClickCalculateWinners","ballotsArray","getPollSortedBallotsArray","plurality","calculateResults","winningThreshold","message","sortedBallotsArray","toLocaleString","winnerId","winner","c","filter","_ref3","_ref4","_ref5","_ref6","_ref7","ballot2","_ref8","_ref9","getRoundVotes","_ref10","_ref10$round","round","reduce","result","chosenCandidateId","_ref11","_ref11$roundIndex","roundIndex","votes","candidateIds","cId","leastVotesReceived","candidateVotes","loserIds","nextBallotsArray","prevBallot","Body","tab","handleClickSetTab","nextTab","auth","src_PollsProvider","src_ActivePollIdProvider","src_ActivePollChooser","PollForm","src_BallotsProvider","src_Ballot","src_Results","App","src_Body","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6QAIeA,EAFaC,IAAMC,cAAc,MCqCjCC,EAnCW,SAAAC,GAAgC,IAA7BC,EAA6BD,EAA7BC,MAAOC,EAAsBF,EAAtBE,gBAC5BC,EAAe,SAAAC,GAA0B,IAAbC,EAAaD,EAAvBE,OAAUD,MAChCH,EAAgBG,IAGZE,EAAcC,OAAOC,OAAOR,GAGlC,OAFAM,EAAYG,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,QAGhDE,EAAAJ,EAAAK,cAACC,EAAoBC,SAArB,KACG,SAAAC,GAAY,OACXJ,EAAAJ,EAAAK,cAAA,UACEI,SAAUjB,EACVE,MAAOc,GAAgB,gBAEvBJ,EAAAJ,EAAAK,cAAA,UAAQX,MAAM,cAAcgB,UAAQ,GAApC,yBAGCd,EAAYe,IAAI,SAAAC,GAAI,OACnBR,EAAAJ,EAAAK,cAAA,UACEQ,IAAKD,EAAKE,GACVpB,MAAOkB,EAAKE,IAEXF,EAAKV,QAGVE,EAAAJ,EAAAK,cAAA,UAAQQ,IAAI,SAASnB,MAAM,WAA3B,wCCAKqB,EA1Bc,SAAA1B,GAAiC,IAA9B2B,EAA8B3B,EAA9B2B,SAAaC,EAAiBpB,OAAAqB,EAAA,EAAArB,CAAAR,EAAA,cACpDC,EAAU2B,EAAV3B,MADoD6B,EAEpBC,qBAFoBC,EAAAxB,OAAAyB,EAAA,EAAAzB,CAAAsB,EAAA,GAErDX,EAFqDa,EAAA,GAEvC9B,EAFuC8B,EAAA,GAI5D,IAAKb,EAAc,CACjB,IAAMZ,EAAcC,OAAOC,OAAOR,GAClCM,EAAYG,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEuB,YAActB,EAAEsB,aAAgB,EAAOvB,EAAEuB,YAActB,EAAEsB,aAAe,IAAM,IAC5G,IAAMC,EAAe5B,EAAY6B,OAAS,EAAI7B,EAAY,GAAGkB,GAAK,KAClEvB,EAAgBiC,GAKlB,OAFAE,QAAQC,IAAIzC,IAAM0C,SAASjB,IAAIK,EAAU,SAAAa,GAAK,OAAIH,QAAQC,IAAIE,MAG5DzB,EAAAJ,EAAAK,cAACC,EAAoBwB,SAArB,CAA8BpC,MAAOc,GAClCtB,IAAM0C,SAASjB,IAAIK,EAAU,SAAAa,GAAK,OAAK3C,IAAM6C,eAAeF,GAEzD3C,IAAM8C,aAAaH,EAAnBhC,OAAAoC,EAAA,EAAApC,CAAA,GACGoB,EADH,CAEA1B,qBAHAsC,8BClBKK,6MCEbC,iBAAmB,SAAA9C,GAAA,IAAG+C,EAAH/C,EAAG+C,YAAH,OAAA/C,EAAgBgD,WAA4BC,KAAK,SAAAC,GAAS,OAAIA,EAAUzB,KAAOsB,OAClGI,mBAAqB,SAAA/C,GAAA,IAAGgD,EAAHhD,EAAGgD,cAAH,OAAAhD,EAAkB4C,WAA4BC,KAAK,SAAAC,GAAS,OAAIA,EAAUrC,OAASuC,OAExGC,wBAA0B,WAAM,IAAAC,EAI1BC,EAAKC,MAFOR,EAFcM,EAE5BG,WAAcT,WACdU,EAH4BJ,EAG5BI,iBAGF,OAAQA,GAAoBH,EAAKJ,mBAAmB,CAClDC,cAAeM,EACfV,kBAIJW,uBAAyB,SAACC,GAGxB,OAFAA,EAAMC,kBACND,EAAME,iBACCP,EAAKQ,kBAGdA,aAAe,WAAM,IAAAC,EAMfT,EAAKC,MAJPC,EAFiBO,EAEjBP,WACAC,EAHiBM,EAGjBN,iBACAO,EAJiBD,EAIjBC,yBACAC,EALiBF,EAKjBE,aAGEX,EAAKF,4BAITY,EAAyB,IAEzBC,EAAa1D,OAAAoC,EAAA,EAAApC,CAAA,GACRiD,EADO,CAEVT,WAAU,GAAAmB,OAAA3D,OAAA4D,EAAA,EAAA5D,CACLiD,EAAWT,YADN,CAER,CACEnC,KAAM6C,EACNjC,GAAI4C,IAAQC,qBAMpBC,kCAAoC,SAACX,IAInCK,EAHqCV,EAAKC,MAAlCS,0BACiBL,EAAMtD,OAAOD,UAKxCmE,iBAAmB,SAACZ,IAKlBa,EAFIlB,EAAKC,MADPiB,cAIFb,EAAME,oBAGRY,iBAAmB,SAACd,GAAU,IAAAe,EAIxBpB,EAAKC,MAFPC,EAF0BkB,EAE1BlB,YAIFmB,EAN4BD,EAG1BC,cAGWnB,GACbG,EAAME,oBAGRe,uBAAyB,WAAM,IACrBnB,EAAqBH,EAAKC,MAA1BE,iBAER,OACE3C,EAAAJ,EAAAK,cAAA,MAAIQ,IAAI,gBACNT,EAAAJ,EAAAK,cAAA,QACEK,SAAUkC,EAAKF,0BACfyB,SAAUvB,EAAKI,wBAEf5C,EAAAJ,EAAAK,cAAA,SAAO+D,QAAQ,gBAAf,iBAGAhE,EAAAJ,EAAAK,cAAA,SACES,GAAG,eACHuD,YAAY,iBACZC,KAAK,OACL5E,MAAOqD,EACPtC,SAAUmC,EAAKgB,oCAEjBxD,EAAAJ,EAAAK,cAAA,UAAQK,SAAUkC,EAAKF,2BAAvB,sBAQR6B,+BAAiC,SAACC,GAAD,OAAmB,SAACvB,GAAU,IAAAwB,EAIzD7B,EAAKC,MAFPC,EAF2D2B,EAE3D3B,WACAS,EAH2DkB,EAG3DlB,aAGMlB,EAAeS,EAAfT,WACFqC,EAAoBzB,EAAMtD,OAAOD,MAEvC,GAAKgF,IAAqB9B,EAAKJ,mBAAmB,CAChDH,aACAI,cAAeiC,IAFjB,CAOA,IAAMC,EAAc9E,OAAA4D,EAAA,EAAA5D,CAAOwC,GAE3BsC,EAAeC,OAAOvC,EAAWwC,QAAQL,GAAgB,EAAzD3E,OAAAoC,EAAA,EAAApC,CAAA,GACK2E,EADL,CAEEtE,KAAMwE,KAGRnB,EAAa1D,OAAAoC,EAAA,EAAApC,CAAA,GACRiD,EADO,CAEVT,WAAYsC,KAGd1B,EAAMC,uBAGR4B,iBAAmB,WAAM,IAIjBC,EAHiBnC,EAAKC,MAApBC,WACAT,WAE6B1B,IAAI,SAAA4B,GAAS,OAChDnC,EAAAJ,EAAAK,cAAA,MAAIQ,IAAK0B,EAAUzB,IACjBV,EAAAJ,EAAAK,cAAA,SAAO+D,QAAS7B,EAAUzB,IAA1B,aAGAV,EAAAJ,EAAAK,cAAA,SACES,GAAIyB,EAAUzB,GACdL,SAAUmC,EAAK2B,+BAA+BhC,GAC9C8B,YAAY,iBACZC,KAAK,OACL5E,MAAO6C,EAAUrC,UAKvB,SAAAsD,OAAA3D,OAAA4D,EAAA,EAAA5D,CACKkF,GADL,CAEEnC,EAAKsB,8BAITc,0BAA4B,SAAC/B,GAAU,IAAAgC,EAIjCrC,EAAKC,MAFPC,EAFmCmC,EAEnCnC,WACAS,EAHmC0B,EAGnC1B,aAGI2B,EAAWjC,EAAMtD,OAAOD,OAASoD,EAAW5C,KAElDqD,EAAa1D,OAAAoC,EAAA,EAAApC,CAAA,GACRiD,EADO,CAEV5C,KAAMgF,QAIVC,4BAA8B,SAAClC,GAAU,IAAAmC,EAInCxC,EAAKC,MAFPC,EAFqCsC,EAErCtC,WACAS,EAHqC6B,EAGrC7B,aAGI8B,EAAUpC,EAAMtD,OAAO2F,QAE7B/B,EAAa1D,OAAAoC,EAAA,EAAApC,CAAA,GACRiD,EADO,CAEVuC,sFAIK,IACCvC,EAAeyC,KAAK1C,MAApBC,WAGNuC,EAEEvC,EAFFuC,QACAnF,EACE4C,EADF5C,KAGF,OACEE,EAAAJ,EAAAK,cAAA,WACED,EAAAJ,EAAAK,cAAA,QAAMS,GAAG,WAAWqD,SAAUoB,KAAKxB,kBACjC3D,EAAAJ,EAAAK,cAAA,kBAGAD,EAAAJ,EAAAK,cAAA,eACED,EAAAJ,EAAAK,cAAA,SAAO+D,QAAQ,QAAf,aAGAhE,EAAAJ,EAAAK,cAAA,SACEiE,KAAK,OACL7D,SAAU8E,KAAKP,0BACftF,MAAOQ,MAIbE,EAAAJ,EAAAK,cAAA,eACED,EAAAJ,EAAAK,cAAA,UACGkF,KAAKT,qBAGV1E,EAAAJ,EAAAK,cAAA,eACED,EAAAJ,EAAAK,cAAA,SAAO+D,QAAQ,iBACbhE,EAAAJ,EAAAK,cAAA,SACES,GAAG,gBACHL,SAAU8E,KAAKJ,4BACfb,KAAK,WACLgB,QAASD,IALb,WAUFjF,EAAAJ,EAAAK,cAAA,UACEmF,QAASD,KAAK1B,iBACdS,KAAK,UAFP,UAMAlE,EAAAJ,EAAAK,cAAA,UACEmF,QAASD,KAAKxB,iBACdO,KAAK,UAFP,gBAxOWmB,6BCWNC,EAAY,CACvB5E,GAAI6E,IAAUC,OAAOC,WACrB3F,KAAMyF,IAAUC,OAAOC,YCXZC,EAAe,CAC1BzD,WAAY,GACZ0D,YAAa,IAAIC,KAAK,GAAGC,UACzB1E,YAAa,IAAIyE,KAAK,GAAGC,UACzBZ,SAAS,EACTvE,GAAI,GACJZ,KAAM,IAGKgG,EAAe,SAACtF,GAAD,OAAAf,OAAAoC,EAAA,EAAApC,CAAA,GACvBiG,EADuB,CAE1BC,aAAa,IAAIC,MAAOC,UACxB1E,aAAa,IAAIyE,MAAOC,UACxBnF,GAAI4C,IAAQC,YACT/C,ICbCkB,GDiBQ6D,IAAUQ,QAAQR,IAAUS,MAAMC,IAAqBR,WACtDF,IAAUW,OAAOT,WACjBF,IAAUW,OAAOT,WACrBF,IAAUY,KAAKV,WACpBF,IAAUC,OAAOC,WACfF,IAAUC,OAAOC,sNCrBvBW,MAAQ,CACN1D,WAAY,KACZC,iBAAkB,GAClB0D,YAAa7D,EAAK8D,WA0BpBC,iBAAmB,SAAAtH,GASb,IARJmB,EAQInB,EARJmB,aAGSoG,GAKLvH,EAPJwH,iBAOIxH,EANJwD,MACEvD,OAKED,EAHJyH,UACExH,MAMF,GAAIsH,GAAaA,EAAUpG,GAAe,CACxC,IAAMuG,EAAiBH,EAAUpG,GAGjC,IAAKuG,EACH,MAAM,IAAIC,MAAM,uCAGlB,OAAOpE,EAAKqE,SAAS,CACnBnE,WAAWjD,OAAAoC,EAAA,EAAApC,CAAA,GAAMkH,GACjBN,YAAa7D,EAAK8D,UAItB,IAAMK,EAAiBb,IAEvB,OAAOtD,EAAKqE,SAAS,CACnBnE,WAAYiE,EACZN,YAAa7D,EAAK8D,aAItBQ,iBAAmB,WAAM,IAAAvE,EAInBC,EAAKC,MAFPtD,EAFqBoD,EAErBpD,gBACA4H,EAHqBxE,EAGrBwE,QAGMrE,EAAeF,EAAK4D,MAApB1D,WACRqE,EAAQrE,GACRvD,EAAgBuD,EAAWhC,OAG7BsG,6BAA+B,SAACrE,GAC9B,OAAOH,EAAKqE,SAAS,CAAElE,wBAGzBsE,iBAAmB,SAACzG,GAAD,OAAUgC,EAAKqE,SAAS,CAAEnE,WAAWjD,OAAAoC,EAAA,EAAApC,CAAA,GACnDe,EADkD,CAErDW,aAAa,IAAIyE,MAAOC,kGAzExBV,KAAKoB,iBAAiB,CACpBnG,aAAc+E,KAAKmB,QACnBG,iBAAkB,KAClBC,UAAW,GACXjE,MAAO0C,KAAK1C,mDAIGiE,GAAW,IACpBL,EAAgBlB,KAAKiB,MAArBC,YAEJlB,KAAKmB,UAAYD,GACnBlB,KAAKoB,iBAAiB,CACpBnG,aAAc+E,KAAKmB,QACnBG,iBAAkBJ,EAClBK,YACAjE,MAAO0C,KAAK1C,yCA4DT,IAAAyE,EAAA/B,KAAAlC,EAKHkC,KAAK1C,MAHP7B,EAFKqC,EAELrC,SAEGC,GAJEoC,EAGL/D,MAHKO,OAAAqB,EAAA,EAAArB,CAAAwD,EAAA,uBAAAkE,EAUHhC,KAAKiB,MAFP1D,EARKyE,EAQLzE,WACAC,EATKwE,EASLxE,iBAGF,OAAKD,GAAqD,IAAtCjD,OAAO2H,QAAQ1E,GAAYrB,QAAgBqB,EAAW2E,cAAgB5H,OACjF,KAIPO,EAAAJ,EAAAK,cAACD,EAAAJ,EAAM0H,SAAP,KACGxI,IAAM0C,SAASjB,IAAIK,EAAU,SAAAa,GAAK,OAAK3C,IAAM6C,eAAeF,GAEzD3C,IAAM8C,aAAaH,EAAnBhC,OAAAoC,EAAA,EAAApC,CAAA,GACGoB,EADH,CAEA6B,aACAC,mBACA4E,aAAcL,EAAKM,iBACnBtE,yBAA0BgE,EAAKF,6BAC/B7D,aAAc+D,EAAKD,iBACnBpD,aAAcqD,EAAKJ,oBARnBrF,YAxGW4D,cAwHvB3D,EAAS+F,YAAc5I,EASR6C,ICrIAA,EDqIAA,EEhIAgG,EAFW,SAACjF,GAAD,OAAWzC,EAAAJ,EAAAK,cAAC0H,EAAqBlF,EAAQzC,EAAAJ,EAAAK,cAAC2H,EAAD,QCCtDC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAvF,EAAA/C,OAAAuI,EAAA,EAAAvI,CAAA0F,KAAA0C,GAAA,QAAAI,EAAAC,UAAA7G,OAAA8G,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAA7F,EAAA/C,OAAA6I,EAAA,EAAA7I,CAAA0F,MAAA4C,EAAAtI,OAAA8I,EAAA,EAAA9I,CAAAoI,IAAAW,KAAAC,MAAAV,EAAA,CAAA5C,MAAA/B,OAAA+E,MACE/B,MAAQ,CACNsC,QAAS,GACTC,eAAgB,GAChBC,UAAW,GACXvC,YAAa7D,EAAK8D,SALtB9D,EA4BEqG,kCAAoC,SAAA5J,GAM9B,IALJmB,EAKInB,EALJmB,aACAqG,EAIIxH,EAJJwH,iBACAhE,EAGIxD,EAHJwD,MACAiE,EAEIzH,EAFJyH,UAEIoC,EAAA7J,EADJ8J,mBACI,IAAAD,KACEnC,EAAkBvG,GAAgBqC,EAAMvD,OAASuD,EAAMvD,MAAMkB,IAAkB,GAC/E4I,EAAkBvC,GAAoBC,EAAUxH,OAASwH,EAAUxH,MAAMuH,IAAsB,GAFjGwC,EAGwCtC,EAApC1E,WAAYsC,OAHhB,IAAA0E,EAGiC,GAHjCA,EAAAC,EAIwCF,EAApC/G,WAAYkH,OAJhB,IAAAD,EAIiC,GAJjCA,EAKAE,EAAe,GASnB,GAPIhJ,IAAiBqG,IACnB2C,EAAY3J,OAAAoC,EAAA,EAAApC,CAAA,GACP2J,EADO,CAEV/C,YAAajG,KAIbiJ,KAAKC,UAAU/E,KAAoB8E,KAAKC,UAAUH,IAAmBJ,EAAa,CACpF,IAAMQ,EAAkB9J,OAAA4D,EAAA,EAAA5D,CAAO8E,GAC/BgF,EAAmB5J,KAAK,kBAAM6J,KAAKC,SAAW,GAAM,GAAK,IACzD,IAAMd,EAAiBY,EAAmBhJ,IAAI,SAAA4B,GAAS,OAAIA,EAAUzB,KAGrE0I,EAAY3J,OAAAoC,EAAA,EAAApC,CAAA,GACP2J,EADO,CAEVT,mBAIAlJ,OAAOiK,KAAKN,GAAc/H,QAC5BmB,EAAKqE,SAALpH,OAAAoC,EAAA,EAAApC,CAAA,GACK2J,KA9DX5G,EAmEEmH,2BAA6B,SAAA3H,GAAW,OAAI,SAAAa,GAAS,IAC3B+G,EAAuBpH,EAAK4D,MAA5CuC,eACFkB,EAAWhH,EAAMtD,OAAOD,MAE9B,GAAIuK,EAAU,CACZ,IAAMC,EAAkBrK,OAAA4D,EAAA,EAAA5D,CAAOmK,GAC/BE,EAAmBtF,OAAOoF,EAAmBnF,QAAQzC,GAAc,GACnE8H,EAAmBtF,OAAOqF,EAAU,EAAG7H,GACvCQ,EAAKqE,SAAS,CAAE8B,eAAgBmB,OA3EtCtH,EA+EEuH,4BAA8B,SAAAlH,GAAK,OAAIL,EAAKqE,SAAS,CAAE+B,UAAW/F,EAAMtD,OAAOD,SA/EjFkD,EAiFEwH,uBAAyB,SAACnH,GAAU,IAAAN,EAI9BC,EAAKC,MAFPvD,EAFgCqD,EAEhCrD,MACA+K,EAHgC1H,EAGhC0H,UAHgC9C,EAS9B3E,EAAK4D,MAFPuC,EAPgCxB,EAOhCwB,eACAC,EARgCzB,EAQhCyB,UARgCsB,GAWf1H,EAAK8D,UAAYpH,EAAMsD,EAAK8D,UAAY,KACnD5F,GAAIyJ,OAZsB,IAAAD,EAYb,KAZaA,EAclCrH,EAAME,iBAENkH,EAAU,CACRtB,iBACAyB,eAAe,IAAIxE,MAAOC,UAC1BwE,WAAW,EACX3J,GAAI4C,IAAQC,WACZ4G,SACAvB,cAGFpG,EAAKqE,SAAS,CAAE+B,UAAW,KAE3BpG,EAAKqG,kCAAkC,CACrCE,aAAa,EACb3I,aAAcoC,EAAK8D,QACnB7D,MAAOD,EAAKC,MACZgE,iBAAkBjE,EAAK8D,QACvBI,UAAWlE,EAAKC,SAjHtBD,EAAA,OAAA/C,OAAA6K,EAAA,EAAA7K,CAAAoI,EAAAC,GAAArI,OAAA8K,EAAA,EAAA9K,CAAAoI,EAAA,EAAApH,IAAA,oBAAAnB,MAAA,WASI6F,KAAK0D,kCAAkC,CACrCzI,aAAc+E,KAAKmB,QACnB7D,MAAO0C,KAAK1C,MACZgE,iBAAkB,KAClBC,UAAW,OAbjB,CAAAjG,IAAA,qBAAAnB,MAAA,SAiBqBoH,GAAW,IACpBL,EAAgBlB,KAAKiB,MAArBC,YAERlB,KAAK0D,kCAAkC,CACrCzI,aAAc+E,KAAKmB,QACnB7D,MAAO0C,KAAK1C,MACZgE,iBAAkBJ,EAClBK,UAAWA,MAxBjB,CAAAjG,IAAA,SAAAnB,MAAA,WAqHW,IAAA4H,EAAA/B,KACCjG,EAAUiG,KAAK1C,MAAfvD,MACFwD,EAAayC,KAAKmB,UAAYpH,EAAMiG,KAAKmB,UAAY,IAFpDkE,EAOHrF,KAAKiB,MAFPuC,EALK6B,EAKL7B,eACAC,EANK4B,EAML5B,UANK6B,GASqB/H,GAAc,IAAlCT,kBATD,IAAAwI,EASc,GATdA,EAWP,OACEzK,EAAAJ,EAAAK,cAAA,WACED,EAAAJ,EAAAK,cAAA,oBAGAD,EAAAJ,EAAAK,cAAA,QAAM8D,SAAUoB,KAAK6E,wBACnBhK,EAAAJ,EAAAK,cAAA,eACED,EAAAJ,EAAAK,cAAA,SAAO+D,QAAQ,aAAf,aAGAhE,EAAAJ,EAAAK,cAAA,SACES,GAAG,YACHwD,KAAK,OACL7D,SAAU8E,KAAK4E,4BACfzK,MAAOsJ,KAGX5I,EAAAJ,EAAAK,cAAA,eACED,EAAAJ,EAAAK,cAAA,UACG0I,EAAepI,IAAI,SAACyB,EAAa0I,GAChC,IAAMvI,EAAYF,EAAWC,KAAK,SAAAC,GAAS,OAAIA,EAAUzB,KAAOsB,IAEhE,OAAKG,EAKHnC,EAAAJ,EAAAK,cAAA,MAAIQ,IAAK0B,EAAUzB,IACjBV,EAAAJ,EAAAK,cAAA,SAAO+D,QAAO,uBAAAZ,OAAyBjB,EAAUzB,KAAjD,iBAEEV,EAAAJ,EAAAK,cAAA,WACAD,EAAAJ,EAAAK,cAAA,cACGkC,EAAUrC,OAGfE,EAAAJ,EAAAK,cAAA,SACES,GAAE,uBAAA0C,OAAyBjB,EAAUzB,IACrCiK,IAAI,IACJC,IAAK3I,EAAWZ,OAAS,EACzBwJ,KAAK,IACL3G,KAAK,SACL5E,MAAOoL,EACPrK,SAAU6G,EAAKyC,2BAA2BxH,EAAUzB,OAnBjD,SA0BfV,EAAAJ,EAAAK,cAAA,eACED,EAAAJ,EAAAK,cAAA,UACEiE,KAAK,SACL5D,UAAWsI,GAFb,iBAlLZf,EAAA,CAA4BxC,aA+L5BwC,EAAOJ,YAAc5I,EAOrBgJ,EAAOnC,aAAe,CACpBuE,UAAW,KACX/K,MAAO,IAGM2I,IC/MAA,ED+MAA,UE9MFiD,EAA2B,WACtC,IAAMC,EAAaC,OAAOC,aAAaC,QAAQ,SAE3ChM,EAAQ,GAEZ,IACEA,EAAQmK,KAAK8B,MAAMJ,IAAe7L,EAClC,MAAMkM,GACN9J,QAAQ+J,KAAK,+CAGf,OAAOnM,GCZMoM,6MDgBblF,MAAQ,CACNlH,MAAO4L,OAGTS,SAAW,SAACrM,GACVsD,EAAKqE,SAAS,CAAE3H,UAChB,IAAMsM,EAAcnC,KAAKC,UAAUpK,GACnC8L,OAAOC,aAAaQ,QAAQ,QAASD,MAGvCzE,QAAU,SAACvG,GAAS,IACHkL,EAAclJ,EAAK4D,MAA1BlH,MAERsD,EAAK+I,SAAL9L,OAAAoC,EAAA,EAAApC,CAAA,GACKiM,EADLjM,OAAAkM,EAAA,EAAAlM,CAAA,GAEGe,EAAKE,GAFRjB,OAAAoC,EAAA,EAAApC,CAAA,GAGO6L,EAAcM,cACdF,EAAUlL,EAAKE,IACfF,EALP,CAMIW,aAAa,IAAIyE,MAAOC,wFAKrB,IAAAqB,EAAA/B,KAAA5C,EAIH4C,KAAK1C,MAFP7B,EAFK2B,EAEL3B,SACGC,EAHEpB,OAAAqB,EAAA,EAAArB,CAAA8C,EAAA,cAMCrD,EAAUiG,KAAKiB,MAAflH,MAER,OAAKA,EAMEJ,IAAM0C,SAASjB,IAAIK,EAAU,SAAAa,GAAK,OAAK3C,IAAM6C,eAAeF,GAE/D3C,IAAM8C,aAAaH,EAAnBhC,OAAAoC,EAAA,EAAApC,CAAA,GACGoB,EADH,CAEA3B,QACA6H,QAASG,EAAKH,WAJdtF,IALAzB,EAAAJ,EAAAK,cAAA,OAAK4L,UAAU,iCAnCKxG,aEdfyG,EAAb,SAAAhE,GAAA,SAAAgE,IAAA,IAAA/D,EAAAvF,EAAA/C,OAAAuI,EAAA,EAAAvI,CAAA0F,KAAA2G,GAAA,QAAA7D,EAAAC,UAAA7G,OAAA8G,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAA7F,EAAA/C,OAAA6I,EAAA,EAAA7I,CAAA0F,MAAA4C,EAAAtI,OAAA8I,EAAA,EAAA9I,CAAAqM,IAAAtD,KAAAC,MAAAV,EAAA,CAAA5C,MAAA/B,OAAA+E,MAwBE/B,MAAQ,CACPsC,QAAS,IAzBZlG,EAgCEuJ,WAAa,SAACrD,GACZlG,EAAKqE,SAAS,CAAE6B,YAChB,IAAMsD,EAAgB3C,KAAKC,UAAUZ,GACrCsC,OAAOC,aAAaQ,QAAQ,UAAWO,IAnC3CxJ,EAsCEyH,UAAY,SAACgC,GAAW,IACLC,EAAgB1J,EAAK4D,MAA9BsC,QAERlG,EAAKuJ,WAALtM,OAAAoC,EAAA,EAAApC,CAAA,GACKyM,EADLzM,OAAAkM,EAAA,EAAAlM,CAAA,GAEGwM,EAAOvL,GAFVjB,OAAAoC,EAAA,EAAApC,CAAA,GAGOqM,EAAgBF,cAChBM,EAAYD,EAAOvL,IACnBuL,OA9CXzJ,EAAA,OAAA/C,OAAA6K,EAAA,EAAA7K,CAAAqM,EAAAhE,GAAArI,OAAA8K,EAAA,EAAA9K,CAAAqM,EAAA,EAAArL,IAAA,oBAAAnB,MAAA,WA6BI6F,KAAK0B,SAAS,CAAE6B,QAASoD,EAAgBK,iCA7B7C,CAAA1L,IAAA,SAAAnB,MAAA,WAmDW,IAAAiD,EAIH4C,KAAK1C,MAFP7B,EAFK2B,EAEL3B,SACGC,EAHEpB,OAAAqB,EAAA,EAAArB,CAAA8C,EAAA,cAMCmG,EAAYvD,KAAKiB,MAAjBsC,QAER,OAAO5J,IAAM8C,aAAahB,EAAnBnB,OAAAoC,EAAA,EAAApC,CAAA,GACFoB,EADE,CAEL6H,UACAuB,UAAW9E,KAAK8E,iBA9DtB6B,EAAA,CAAqCzG,aAAxByG,EACJF,cAAgB,CACrBjD,eAAgB,GAChByB,cAAe,KACfC,WAAW,EACX3J,GAAI4C,IAAQC,WACZ4G,OAAQ,GACRvB,UAAW,IAPFkD,EAUJK,2BAA6B,WAClC,IAAMC,EAAepB,OAAOC,aAAaC,QAAQ,WAE7CxC,EAAU,GAEd,IACEA,EAAUW,KAAK8B,MAAMiB,IAAiB1D,EACtC,MAAM0C,GACN9J,QAAQ+J,KAAK,iDAGf,OAAO3C,GA8CIoD,QC9DTO,6MAmGJjG,MAAQ,CACN1D,WAAY,GACZ4J,aAAc,GACd7F,iBAAkB,KAClB8F,UAAW,MAWbC,0BAA4B,WAAM,IACxBtN,EAAUsD,EAAKC,MAAfvD,MACFkB,EAAeoC,EAAK8D,QAGtBlG,IAFyBoC,EAAK4D,MAA1BK,kBAGNjE,EAAKqE,SAAS,CACZJ,iBAAkBrG,EAClBsC,WAAatC,GAAgBlB,GAASA,EAAMkB,IAAkB,QAKpEqM,gBAAkB,eAElBC,4BAA8B,WAAM,IAC1BhE,EAAYlG,EAAKC,MAAjBiG,QACYlI,EAASgC,EAAK4D,MAA1B1D,WAEFiK,EAAeN,EAAQO,0BAA0B,CACrDpM,OACAkI,YAGImE,EAAYF,EAAatL,OAAS,EAClCY,EAAUxC,OAAA4D,EAAA,EAAA5D,CAAOe,EAAKyB,YAE5BO,EAAKqE,SAAS,CACZyF,aAAc,GACdC,UAAW,KAGb,IAAI,IACMA,EAAcF,EAAQS,iBAAiB,CAC7CH,eACA1K,aACA8K,iBAAkBF,IAHZN,UAMR/J,EAAKqE,SAAS,CACZ0F,cAEF,MAAOnB,GACP5I,EAAKqE,SAAS,CACZyF,aAAclB,EAAE4B,+FAnDpB7H,KAAKqH,yEAILrH,KAAKqH,6DAoDE,IACC9D,EAAYvD,KAAK1C,MAAjBiG,QADDvB,EAOHhC,KAAKiB,MAHK5F,EAJP2G,EAILzE,WACA4J,EALKnF,EAKLmF,aACAC,EANKpF,EAMLoF,UAGIU,EAAqBZ,EAAQO,0BAA0B,CAC3DpM,OACAkI,YAGF,OACE1I,EAAAJ,EAAAK,cAAA,WACED,EAAAJ,EAAAK,cAAA,yBAGAD,EAAAJ,EAAAK,cAAA,UAAKgN,EAAmB5L,OAAxB,UAAqE,IAA9B4L,EAAmB5L,OAAe,GAAK,KAC9ErB,EAAAJ,EAAAK,cAAA,UACGgN,EAAmB1M,IAAI,SAAA0L,GAAM,OAC5BjM,EAAAJ,EAAAK,cAAA,MAAIQ,IAAKwL,EAAOvL,IACdV,EAAAJ,EAAAK,cAAA,UAAK,IAAI2F,KAAKqG,EAAO7B,eAAe8C,kBACpClN,EAAAJ,EAAAK,cAAA,WACAD,EAAAJ,EAAAK,cAAA,WAAMoJ,KAAKC,UAAU2C,QAI3BjM,EAAAJ,EAAAK,cAAA,UAAQmF,QAASD,KAAKuH,6BAAtB,uBAGIH,EAAUlL,QACZrB,EAAAJ,EAAAK,cAAA,OAAK4L,UAAU,oBACb7L,EAAAJ,EAAAK,cAAA,kCACED,EAAAJ,EAAAK,cAAA,UACGsM,EAAUhM,IAAI,SAAA4M,GACb,IAAMC,EAAS5M,EAAKyB,WAAWC,KAAK,SAAAmL,GAAC,OAAIA,EAAE3M,KAAOyM,IAClD,OAAIC,EACKpN,EAAAJ,EAAAK,cAAA,MAAIQ,IAAK2M,EAAO1M,IACpB0M,EAAOtN,MAIL,SAKhBwM,GACCtM,EAAAJ,EAAAK,cAAA,OAAK4L,UAAU,yBACZS,WAtNSjH,aAAhBgH,EACGO,0BAA4B,SAAA3N,GAAuB,IAApBuB,EAAoBvB,EAApBuB,KAAMkI,EAAczJ,EAAdyJ,QAS1C,OARApH,QAAQC,IAAI,CAAEf,OAAMkI,QAASjJ,OAAOC,OAAOgJ,KAChBjJ,OAAO2H,QAAQsB,GACvC4E,OAAO,SAAAjO,GAAA,IAAAkO,EAAA9N,OAAAyB,EAAA,EAAAzB,CAAAJ,EAAA,GAAM4M,GAANsB,EAAA,GAAAA,EAAA,WAAkBtB,GAAUA,EAAO9B,SAAW3J,EAAKE,KAC1Df,KAAK,SAAA6N,EAAAC,GAAA,IAAAC,EAAAjO,OAAAyB,EAAA,EAAAzB,CAAA+N,EAAA,GAAMvB,GAANyB,EAAA,GAAAA,EAAA,IAAAC,EAAAlO,OAAAyB,EAAA,EAAAzB,CAAAgO,EAAA,GAAqBG,GAArBD,EAAA,GAAAA,EAAA,WAAkC1B,EAAO7B,cAAgBwD,EAAQxD,eAAiB,EAAI,IAC3F7J,IAAI,SAAAsN,GAAkB,IAAAC,EAAArO,OAAAyB,EAAA,EAAAzB,CAAAoO,EAAA,GAAAC,EAAA,GACrB,OADqBA,EAAA,MANvBzB,EAaG0B,cAAgB,SAAAC,GAAiC,IAA9BrB,EAA8BqB,EAA9BrB,aAA8BsB,EAAAD,EAAhBE,aAAgB,IAAAD,EAAR,EAAQA,EACtD,OAAOtB,EAAawB,OAAO,SAACC,EAAQnC,GAAW,IACrCtD,EAAmBsD,EAAnBtD,eAER,GAAIA,EAAetH,OAAS6M,EAAO,CACjC,IAAMG,EAAoB1F,EAAeuF,GACzCE,EAAOC,IAAsBD,EAAOC,IAAsB,GAAK,EAGjE,OAAOD,GACN,KAvBD/B,EA0BGS,iBAAmB,SAAAwB,GAKpB,IAJJ3B,EAII2B,EAJJ3B,aACA1K,EAGIqM,EAHJrM,WAGIsM,EAAAD,EAFJE,kBAEI,IAAAD,EAFS,EAETA,EADJxB,EACIuB,EADJvB,iBAGM0B,EAAQpC,EAAQ0B,cAAc,CAAEpB,iBAGhC+B,EAAezM,EAAW1B,IAAI,SAAA8M,GAAC,OAAIA,EAAE3M,KAE3C,IAAKgO,EAAarN,QAAyB,IAAfmN,EAC1B,MAAM,IAAI5H,MAzCsB,iCA0C3B,IAAK8H,EAAarN,OACvB,MAAM,IAAIuF,MA5CyB,wCA+CrC,IAAM2F,EAAYmC,EAAapB,OAAO,SAAAqB,GAAG,OAAIF,EAAME,IAAQF,EAAME,GAAO5B,IAExE,GAAIR,EAAUlL,OAEZ,MAAO,CAAEkL,aAIT,IAAIqC,EAAqBF,EAAaP,OAAO,SAACC,EAAQO,GACpD,IAAME,EAAiBJ,EAAME,IAAQ,EAGrC,OADAP,GADAA,EAA2B,kBAAXA,EAAsBA,EAASS,IAC5BA,EAAiBT,EAASS,GAE5C,MAGCC,EAAW7M,EAAW1B,IAAI,SAAA8M,GAAC,OAAIA,EAAE3M,KAAI4M,OAAO,SAAAqB,GAAG,OAAKF,EAAME,IAAQ,KAAOC,IAEzEG,EAAgBtP,OAAA4D,EAAA,EAAA5D,CAAOkN,GAG3B,IAAImC,EAASzN,OA6BX,MAAM,IAAIuF,MAAM,sDAxBhB,IAAMrC,EAAiBtC,EAAWqL,OAAO,SAAAnL,GAAS,OAAI2M,EAASrK,QAAQtC,EAAUzB,IAAM,IACvFqO,EAAmBA,EAAiBxO,IAAI,SAAAyO,GAAU,OAAAvP,OAAAoC,EAAA,EAAApC,CAAA,GAC7CuP,EAD6C,CAEhDrG,eAAgBqG,EAAWrG,eAAe2E,OAAO,SAAAqB,GAAG,OAAIG,EAASrK,QAAQkK,GAAO,QAKlF,IACE,OAAOtC,EAAQS,iBAAiB,CAC9BH,aAAcoC,EACd9M,WAAYsC,EACZiK,WAAYA,EAAa,EACzBzB,qBAEF,MAAO3B,GACP,GAzF+B,yCAyF3BA,EAAE4B,QACJ,MAAO,CAAET,UAAWmC,GAGtB,MAAMtD,IAoIhBiB,EAAQ5E,YAAc5I,EAOPwN,IC3OAA,ED2OAA,EE3OA4C,6MCSb7I,MAAQ,CACN8I,IAAK,cAGPC,kBAAoB,SAACC,GAAD,OAAa,SAACvM,GAAD,OAAWL,EAAKqE,SAAS,CAAEqI,IAAKE,8EAExD,IAAA7M,EAC0B4C,KAAK1C,MAArB5B,GADV0B,EACC8M,KADD5P,OAAAqB,EAAA,EAAArB,CAAA8C,EAAA,WAEC2M,EAAQ/J,KAAKiB,MAAb8I,IAER,OACAlP,EAAAJ,EAAAK,cAAA,MAASY,EACPb,EAAAJ,EAAAK,cAAA,OAAK4L,UAAU,QACb7L,EAAAJ,EAAAK,cAAA,UACE4L,UAAU,MACVzG,QAASD,KAAKgK,kBAAkB,aAFlC,eAMAnP,EAAAJ,EAAAK,cAAA,UACE4L,UAAU,MACVzG,QAASD,KAAKgK,kBAAkB,WAFlC,UAMAnP,EAAAJ,EAAAK,cAAA,UACE4L,UAAU,MACVzG,QAASD,KAAKgK,kBAAkB,YAFlC,YAOO,aAARD,GACClP,EAAAJ,EAAAK,cAACqP,EAAD,KACEtP,EAAAJ,EAAAK,cAACsP,EAAD,KACEvP,EAAAJ,EAAAK,cAACuP,EAAD,MACAxP,EAAAJ,EAAAK,cAACwP,EAAD,QAIG,WAARP,GACClP,EAAAJ,EAAAK,cAACqP,EAAD,KACEtP,EAAAJ,EAAAK,cAACsP,EAAD,KACEvP,EAAAJ,EAAAK,cAACuP,EAAD,MACAxP,EAAAJ,EAAAK,cAACyP,EAAD,KACE1P,EAAAJ,EAAAK,cAAC0P,EAAD,SAKC,YAART,GACClP,EAAAJ,EAAAK,cAACqP,EAAD,KACEtP,EAAAJ,EAAAK,cAACsP,EAAD,KACEvP,EAAAJ,EAAAK,cAACuP,EAAD,MACAxP,EAAAJ,EAAAK,cAACyP,EAAD,KACE1P,EAAAJ,EAAAK,cAAC2P,EAAD,iBAxDKvK,aCsDJwK,mLAVb,OACI7P,EAAAJ,EAAAK,cAAA,OAAK4L,UAAU,OACb7L,EAAAJ,EAAAK,cAAC6P,EAAD,cAZUzK,aChCE0K,QACW,cAA7B/E,OAAOgF,SAASC,UAEe,UAA7BjF,OAAOgF,SAASC,UAEhBjF,OAAOgF,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpQ,EAAAJ,EAAAK,cAACoQ,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.658051f7.chunk.js","sourcesContent":["import React from 'react';\n\nconst ActivePollIdContext = React.createContext(null);\n\nexport default ActivePollIdContext;\n","import React from 'react';\n\nimport ActivePollIdContext from '../model/ActivePollIdContext';\n\nconst ActivePollChooser = ({ polls, setActivePollId }) => {\n  const handleChange = ({ target: { value }}) => {\n    setActivePollId(value);\n  }\n\n  const sortedPolls = Object.values(polls);\n  sortedPolls.sort((a, b) => a.name.localeCompare(b.name));\n\n  return (\n    <ActivePollIdContext.Consumer>\n      {activePollId =>\n        <select\n          onChange={handleChange}\n          value={activePollId || '_placeholder'}\n        >\n          <option value=\"placeholder\" disabled>\n            Choose an active poll\n          </option>\n          {sortedPolls.map(poll => (\n            <option\n              key={poll.id}\n              value={poll.id}\n            >\n              {poll.name}\n            </option>\n          ))}\n          <option key=\"create\" value=\"_create\">\n            Create a new poll\n          </option>\n        </select>\n      }\n    </ActivePollIdContext.Consumer>\n  );\n};\n\nexport default ActivePollChooser;\n","import React, { useState } from 'react';\n\nimport ActivePollIdContext from '../model/ActivePollIdContext';\n\nconst ActivePollIdProvider = ({ children, ...passedProps}) => {\n  const { polls } = passedProps;\n  const [activePollId, setActivePollId] = useState();\n\n  if (!activePollId) {\n    const sortedPolls = Object.values(polls);\n    sortedPolls.sort((a, b) => (a.dateUpdated > b.dateUpdated && -1) || (a.dateUpdated > b.dateUpdated && 1) || 0);\n    const newestPollId = sortedPolls.length > 0 ? sortedPolls[0].id : null;\n    setActivePollId(newestPollId);\n  }\n\n  console.log(React.Children.map(children, child => console.log(child)));\n\n  return (\n    <ActivePollIdContext.Provider value={activePollId}>\n      {React.Children.map(children, child => !React.isValidElement(child)\n        ? child\n        : React.cloneElement(child, {\n          ...passedProps,\n          setActivePollId,\n        })\n      )}\n    </ActivePollIdContext.Provider>\n  );\n};\n\nexport default ActivePollIdProvider;\n","import Form from './Form';\n\nexport default Form;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nclass Form extends Component {\n  getCandidateById = ({ candidateId, candidates }) => candidates.find(candidate => candidate.id === candidateId)\n  getCandidateByName = ({ candidateName, candidates }) => candidates.find(candidate => candidate.name === candidateName)\n\n  getAddCandidateDisabled = () => {\n    const {\n      activePoll: { candidates },\n      newCandidateName,\n    } = this.props;\n\n    return !newCandidateName || this.getCandidateByName({\n      candidateName: newCandidateName,\n      candidates,\n    });\n  }\n\n  submitAddCandidateForm = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    return this.addCandidate();\n  }\n\n  addCandidate = () => {\n    const {\n      activePoll,\n      newCandidateName,\n      onChangeNewCandidateName,\n      onChangePoll,\n    } = this.props;\n\n    if (this.getAddCandidateDisabled()) {\n      return;\n    }\n\n    onChangeNewCandidateName('');\n\n    onChangePoll({\n      ...activePoll,\n      candidates: [\n        ...activePoll.candidates,\n        {\n          name: newCandidateName,\n          id: shortid.generate(),\n        },\n      ]\n    });\n  }\n\n  handleChangeNewCandidateNameInput = (event) => {\n    const { onChangeNewCandidateName } = this.props;\n    const newCandidateName = event.target.value;\n\n    onChangeNewCandidateName(newCandidateName);\n  };\n\n  handleCancelForm = (event) => {\n    const {\n      revertPoll,\n    } = this.props;\n\n    revertPoll();\n    event.preventDefault();\n  }\n\n  handleSubmitForm = (event) => {\n    const {\n      activePoll,\n      onSubmitPoll,\n    } = this.props;\n\n    onSubmitPoll(activePoll);\n    event.preventDefault();\n  }\n\n  renderNewCandidateForm = () => {\n    const { newCandidateName } = this.props;\n\n    return (\n      <li key=\"newCandidate\">\n        <form\n          disabled={this.getAddCandidateDisabled()}\n          onSubmit={this.submitAddCandidateForm}\n        >\n          <label htmlFor=\"newCandidate\">\n            New candidate\n          </label>\n          <input\n            id=\"newCandidate\"\n            placeholder=\"Candidate name\"\n            type=\"text\"\n            value={newCandidateName}\n            onChange={this.handleChangeNewCandidateNameInput}\n          />\n          <button disabled={this.getAddCandidateDisabled()}>\n            Add candidate\n          </button>\n        </form>\n      </li>\n    );\n  }\n\n  handleChangeCandidateNameInput = (prevCandidate) => (event) => {\n    const {\n      activePoll,\n      onChangePoll,\n    } = this.props;\n\n    const { candidates } = activePoll;\n    const nextCandidateName = event.target.value;\n\n    if (!nextCandidateName || this.getCandidateByName({\n      candidates,\n      candidateName: nextCandidateName,\n    })) {\n      return;\n    }\n\n    const nextCandidates = [...candidates];\n\n    nextCandidates.splice(candidates.indexOf(prevCandidate), 1, {\n      ...prevCandidate,\n      name: nextCandidateName,\n    });\n\n    onChangePoll({\n      ...activePoll,\n      candidates: nextCandidates,\n    });\n\n    event.stopPropagation();\n  }\n\n  renderCandidates = () => {\n    const { activePoll } = this.props;\n    const { candidates } = activePoll;\n\n    const currentCandidates = candidates.map(candidate => (\n      <li key={candidate.id}>\n        <label htmlFor={candidate.id}>\n          Candidate\n        </label>\n        <input\n          id={candidate.id}\n          onChange={this.handleChangeCandidateNameInput(candidate)}\n          placeholder=\"Candidate name\"\n          type=\"text\"\n          value={candidate.name}\n        />\n      </li>\n    ));\n\n    return [\n      ...currentCandidates,\n      this.renderNewCandidateForm()\n    ];\n  }\n\n  handleChangePollNameInput = (event) => {\n    const {\n      activePoll,\n      onChangePoll,\n    } = this.props;\n\n    const nextName = event.target.value || activePoll.name;\n\n    onChangePoll({\n      ...activePoll,\n      name: nextName,\n    });\n  }\n\n  handleChangeEnabledCheckbox = (event) => {\n    const {\n      activePoll,\n      onChangePoll,\n    } = this.props;\n\n    const enabled = event.target.checked;\n\n    onChangePoll({\n      ...activePoll,\n      enabled,\n    });\n  }\n\n  render() {\n    const { activePoll } = this.props;\n\n    const {\n      enabled,\n      name,\n    } = activePoll;\n\n    return (\n      <div>\n        <form id=\"pollForm\" onSubmit={this.handleSubmitForm}>\n          <h1>\n            Poll\n          </h1>\n          <section>\n            <label htmlFor=\"name\">\n              Poll name\n            </label>\n            <input\n              type=\"text\"\n              onChange={this.handleChangePollNameInput}\n              value={name}\n            />\n          </section>\n        </form>\n        <section>\n          <ul>\n            {this.renderCandidates()}\n          </ul>\n        </section>\n        <section>\n          <label htmlFor=\"toggleEnabled\">\n            <input\n              id=\"toggleEnabled\"\n              onChange={this.handleChangeEnabledCheckbox}\n              type=\"checkbox\"\n              checked={enabled}\n            />\n              Enable\n          </label>\n        </section>\n        <button\n          onClick={this.handleCancelForm}\n          type=\"button\"\n        >\n          Cancel\n        </button>\n        <button\n          onClick={this.handleSubmitForm}\n          type=\"button\"\n        >\n          Save\n        </button>\n      </div>\n    );\n  }\n}\n\n\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nexport const defaultProps = {\n  id: '',\n  name: '',\n};\n\nexport const generateCandidate = (candidate) => ({\n  ...defaultProps,\n  id: shortid.generate(),\n  ...candidate,\n});\n\nexport const propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default {\n  defaultProps,\n  generateCandidate,\n  propTypes,\n};\n","import PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nimport { propTypes as candidatePropTypes } from './candidate';\n\nexport const defaultProps = {\n  candidates: [],\n  dateCreated: new Date(0).valueOf(),\n  dateUpdated: new Date(0).valueOf(),\n  enabled: false,\n  id: '',\n  name: '',\n};\n\nexport const generatePoll = (poll) => ({\n  ...defaultProps,\n  dateCreated: new Date().valueOf(),\n  dateUpdated: new Date().valueOf(),\n  id: shortid.generate(),\n  ...poll,\n});\n\nexport const propTypes = {\n  candidates: PropTypes.arrayOf(PropTypes.shape(candidatePropTypes)).isRequired,\n  dateCreated: PropTypes.number.isRequired,\n  dateUpdated: PropTypes.number.isRequired,\n  enabled: PropTypes.bool.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default {\n  defaultProps,\n  generatePoll,\n  propTypes,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { generatePoll } from '../../model/poll';\nimport ActivePollIdContext from '../../model/ActivePollIdContext';\n\nclass Provider extends Component {\n  state = {\n    activePoll: null,\n    newCandidateName: '',\n    prevContext: this.context,\n  }\n\n  // Take poll provided, wrap in partially controlled thingy\n  componentDidMount() {\n    this.updateActivePoll({\n      activePollId: this.context,\n      prevActivePollId: null,\n      prevProps: {},\n      props: this.props,\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { prevContext } = this.state;\n\n    if (this.context !== prevContext) {\n      this.updateActivePoll({\n        activePollId: this.context,\n        prevActivePollId: prevContext,\n        prevProps,\n        props: this.props,\n      });\n    }\n  }\n\n  updateActivePoll = ({\n    activePollId,\n    prevActivePollId,\n    props: {\n      polls: nextPolls,\n    },\n    prevProps: {\n      polls: prevPolls,\n    },\n  }) => {\n    // If there's a props-based active poll, make a copy of it in state for the form to use.\n    // Otherwise, make a new poll.\n\n    if (nextPolls && nextPolls[activePollId]) {\n      const nextActivePoll = nextPolls[activePollId];\n\n      // This should never happen on mount\n      if (!nextActivePoll) {\n        throw new Error('Couldn\\'t find your poll in the list');\n      }\n\n      return this.setState({\n        activePoll: { ...nextActivePoll },\n        prevContext: this.context,\n      });\n    }\n\n    const nextActivePoll = generatePoll();\n\n    return this.setState({\n      activePoll: nextActivePoll,\n      prevContext: this.context,\n    });\n  }\n\n  handleSubmitPoll = () => {\n    const {\n      setActivePollId,\n      setPoll,\n    } = this.props;\n\n    const { activePoll } = this.state;\n    setPoll(activePoll);\n    setActivePollId(activePoll.id);\n  }\n\n  handleChangeNewCandidateName = (newCandidateName) => {\n    return this.setState({ newCandidateName });\n  }\n\n  handleChangePoll = (poll) => this.setState({ activePoll: {\n    ...poll,\n    dateUpdated: new Date().valueOf(),\n  }});\n\n  render() {\n    const {\n      children,\n      polls,\n      ...passedProps\n    } = this.props;\n\n    const {\n      activePoll,\n      newCandidateName,\n    } = this.state;\n\n    if (!activePoll || (Object.entries(activePoll).length === 0 && activePoll.constructor === Object)) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        {React.Children.map(children, child => !React.isValidElement(child)\n          ? child\n          : React.cloneElement(child, {\n            ...passedProps,\n            activePoll,\n            newCandidateName,\n            onRevertPoll: this.handleRevertPoll,\n            onChangeNewCandidateName: this.handleChangeNewCandidateName,\n            onChangePoll: this.handleChangePoll,\n            onSubmitPoll: this.handleSubmitPoll,\n          })\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nProvider.contextType = ActivePollIdContext;\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  polls: PropTypes.object.isRequired,\n  setActivePollId: PropTypes.func.isRequired,\n  setPoll: PropTypes.func.isRequired,\n};\n\nexport default Provider;\n","import Provider from './Provider';\n\nexport default Provider;\n","import React from 'react';\n\nimport PollForm from './Form';\nimport PollFormProvider from './Provider';\n\nconst ConnectedPollForm = (props) => <PollFormProvider {...props} ><PollForm /></PollFormProvider>;\n\nexport default ConnectedPollForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nimport ActivePollIdContext from '../model/ActivePollIdContext';\n\nexport class Ballot extends Component {\n  state = {\n    ballots: [],\n    candidateRanks: [],\n    voterName: '',\n    prevContext: this.context,\n  }\n\n  componentDidMount() {\n    this.updateShuffledCandidatesFromProps({\n      activePollId: this.context,\n      props: this.props,\n      prevActivePollId: null,\n      prevProps: {},\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { prevContext } = this.state;\n\n    this.updateShuffledCandidatesFromProps({\n      activePollId: this.context,\n      props: this.props,\n      prevActivePollId: prevContext,\n      prevProps: prevProps,\n    });\n  }\n\n  updateShuffledCandidatesFromProps = ({\n    activePollId,\n    prevActivePollId,\n    props,\n    prevProps,\n    forceUpdate = false,\n  }) => {\n    const nextActivePoll = (activePollId && props.polls && props.polls[activePollId]) || {};\n    const prevActivePoll = (prevActivePollId && prevProps.polls && prevProps.polls[prevActivePollId]) || {};\n    const { candidates: nextCandidates = [] } = nextActivePoll;\n    const { candidates: prevCandidates = [] } = prevActivePoll;\n    let stateUpdates = {};\n\n    if (activePollId !== prevActivePollId) {\n      stateUpdates = {\n        ...stateUpdates,\n        prevContext: activePollId,\n      };\n    }\n\n    if (JSON.stringify(nextCandidates) !== JSON.stringify(prevCandidates) || forceUpdate) {\n      const shuffledCandidates = [...nextCandidates];\n      shuffledCandidates.sort(() => Math.random() > 0.5 ? 1 : -1);\n      const candidateRanks = shuffledCandidates.map(candidate => candidate.id);\n\n\n      stateUpdates = {\n        ...stateUpdates,\n        candidateRanks,\n      };\n    }\n\n    if (Object.keys(stateUpdates).length) {\n      this.setState({\n        ...stateUpdates,\n      });\n    }\n  }\n\n  onChangeCandidateRankInput = candidateId => event => {\n    const { candidateRanks: prevCandidateRanks } = this.state;\n    const nextRank = event.target.value;\n\n    if (nextRank) {\n      const nextCandidateRanks = [...prevCandidateRanks];\n      nextCandidateRanks.splice(prevCandidateRanks.indexOf(candidateId), 1);\n      nextCandidateRanks.splice(nextRank, 0, candidateId);\n      this.setState({ candidateRanks: nextCandidateRanks });\n    }\n  }\n\n  handleChangeVotertNameInput = event => this.setState({ voterName: event.target.value });\n\n  handleSubmitBallotForm = (event) => {\n    const {\n      polls,\n      addBallot,\n    } = this.props;\n\n    const {\n      candidateRanks,\n      voterName,\n    } = this.state;\n\n    const activePoll = this.context && (polls[this.context] || {});\n    const { id: pollId = null } = activePoll;\n\n    event.preventDefault();\n\n    addBallot({\n      candidateRanks,\n      dateSubmitted: new Date().valueOf(),\n      submitted: true,\n      id: shortid.generate(),\n      pollId,\n      voterName,\n    });\n\n    this.setState({ voterName: '' });\n\n    this.updateShuffledCandidatesFromProps({\n      forceUpdate: true,\n      activePollId: this.context,\n      props: this.props,\n      prevActivePollId: this.context,\n      prevProps: this.props,\n    });\n  }\n\n  render() {\n    const { polls } = this.props;\n    const activePoll = this.context && (polls[this.context] || {});\n\n    const {\n      candidateRanks,\n      voterName,\n    } = this.state;\n\n    const { candidates = [] } = activePoll || {};\n\n    return (\n      <div>\n        <h1>\n          Ballot\n        </h1>\n        <form onSubmit={this.handleSubmitBallotForm}>\n          <section>\n            <label htmlFor=\"voterName\">\n              Your name\n            </label>\n            <input\n              id=\"voterName\"\n              type=\"text\"\n              onChange={this.handleChangeVotertNameInput}\n              value={voterName}\n            />\n          </section>\n          <section>\n            <ul>\n              {candidateRanks.map((candidateId, i) => {\n                const candidate = candidates.find(candidate => candidate.id === candidateId);\n\n                if (!candidate) {\n                  return null;\n                }\n\n                return (\n                  <li key={candidate.id}>\n                    <label htmlFor={`candidateRankInput--${candidate.id}`}>\n                      Candidate rank\n                      <br/>\n                      <strong>\n                        {candidate.name}\n                      </strong>\n                    </label>\n                    <input\n                      id={`candidateRankInput--${candidate.id}`}\n                      min=\"0\"\n                      max={candidates.length - 1}\n                      step=\"1\"\n                      type=\"number\"\n                      value={i}\n                      onChange={this.onChangeCandidateRankInput(candidate.id)}\n                    />\n                  </li>\n                );\n              })}\n            </ul>\n          </section>\n          <section>\n            <button\n              type=\"submit\"\n              disabled={!voterName}\n            >\n              Submit\n            </button>\n          </section>\n        </form>\n      </div>\n    );\n  }\n}\n\nBallot.contextType = ActivePollIdContext;\n\nBallot.propTypes = {\n  addBallot: PropTypes.func,\n  polls: PropTypes.shape(),\n};\n\nBallot.defaultProps = {\n  addBallot: null,\n  polls: {},\n};\n\nexport default Ballot;\n","import Ballot from './Ballot';\n\nexport default Ballot;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const getPollsFromLocalStorage = () => {\n  const savedPolls = window.localStorage.getItem('polls');\n\n  let polls = {};\n\n  try {\n    polls = JSON.parse(savedPolls) || polls;\n  } catch(e) {\n    console.warn('Couldn\\'t load polls, they\\'ll be overwritten');\n  }\n\n  return polls;\n};\n\nclass PollsProvider extends Component {\n  state = {\n    polls: getPollsFromLocalStorage(),\n  }\n\n  setPolls = (polls) => {\n    this.setState({ polls });\n    const pollsString = JSON.stringify(polls);\n    window.localStorage.setItem('polls', pollsString);\n  }\n\n  setPoll = (poll) => {\n    const { polls: prevPolls } = this.state;\n\n    this.setPolls({\n      ...prevPolls,\n      [poll.id]: {\n        ...PollsProvider.defaultBallot,\n        ...prevPolls[poll.id],\n        ...poll,\n        dateUpdated: new Date().valueOf(),\n      },\n    });\n  }\n\n  render() {\n    const {\n      children,\n      ...passedProps\n    } = this.props;\n\n    const { polls } = this.state;\n\n    if (!polls) {\n      return (\n        <div className=\"PollsProvider__loader\" />\n      );\n    }\n\n    return React.Children.map(children, child => !React.isValidElement(child)\n      ? child\n      : React.cloneElement(child, {\n        ...passedProps,\n        polls,\n        setPoll: this.setPoll,\n      })\n    )\n  }\n}\n\nPollsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default PollsProvider;\n","import PollsProvider from './PollsProvider';\n\nexport default PollsProvider;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nexport class BallotsProvider extends Component {\n  static defaultBallot = {\n    candidateRanks: [],\n    dateSubmitted: null,\n    submitted: false,\n    id: shortid.generate(),\n    pollId: '',\n    voterName: '',\n  };\n\n  static getBallotsFromLocalStorage = () => {\n    const savedBallots = window.localStorage.getItem('ballots');\n\n    let ballots = {};\n\n    try {\n      ballots = JSON.parse(savedBallots) || ballots;\n    } catch(e) {\n      console.warn('Couldn\\'t load ballots, they\\'ll be overwritten');\n    }\n\n    return ballots;\n  }\n\n  state = {\n   ballots: {},\n }\n\n  componentDidMount() {\n    this.setState({ ballots: BallotsProvider.getBallotsFromLocalStorage()});\n  }\n\n  setBallots = (ballots) => {\n    this.setState({ ballots });\n    const ballotsString = JSON.stringify(ballots);\n    window.localStorage.setItem('ballots', ballotsString);\n  }\n\n  addBallot = (ballot) => {\n    const { ballots: prevBallots } = this.state;\n\n    this.setBallots({\n      ...prevBallots,\n      [ballot.id]: {\n        ...BallotsProvider.defaultBallot,\n        ...prevBallots[ballot.id],\n        ...ballot,\n      },\n    });\n  }\n\n  render() {\n    const {\n      children,\n      ...passedProps\n    } = this.props;\n\n    const { ballots } = this.state;\n\n    return React.cloneElement(children, {\n      ...passedProps,\n      ballots,\n      addBallot: this.addBallot,\n    });\n  }\n}\n\nexport default BallotsProvider;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ActivePollIdContext from '../model/ActivePollIdContext';\n\nconst candidatesEliminatedErrorMessage = 'All candidates have been eliminated.';\nconst candidatesMissingErrorMessage = 'Coulnd\\'t find any candidates.';\n\nclass Results extends Component {\n  static getPollSortedBallotsArray = ({ poll, ballots }) => {\n    console.log({ poll, ballots: Object.values(ballots) });\n    const sortedBallotsArray = Object.entries(ballots)\n      .filter(([id, ballot]) => ballot && ballot.pollId === poll.id)\n      .sort(([id, ballot], [id2, ballot2]) => ballot.dateSubmitted > ballot2.dateSubmitted ? -1 : 1)\n      .map(([id, ballot]) => {\n        return ballot;\n      });\n\n    return sortedBallotsArray;\n  }\n\n  static getRoundVotes = ({ ballotsArray, round = 0 }) => {\n    return ballotsArray.reduce((result, ballot) => {\n      const { candidateRanks } = ballot;\n\n      if (candidateRanks.length > round) {\n        const chosenCandidateId = candidateRanks[round];\n        result[chosenCandidateId] = (result[chosenCandidateId] || 0) + 1;\n      }\n\n      return result;\n    }, {});\n  }\n\n  static calculateResults = ({\n    ballotsArray,\n    candidates,\n    roundIndex = 1,\n    winningThreshold,\n  }) => {\n    // TODO: Second round should be transferrable votes. not second round of voting\n    const votes = Results.getRoundVotes({ ballotsArray });\n\n    // console.log('calculateResults', { candidates, ballotsArray, winningThreshold, roundIndex, votes });\n    const candidateIds = candidates.map(c => c.id);\n\n    if (!candidateIds.length && roundIndex === 1) {\n      throw new Error(candidatesMissingErrorMessage);\n    } else if (!candidateIds.length) {\n      throw new Error(candidatesEliminatedErrorMessage);\n    }\n\n    const winnerIds = candidateIds.filter(cId => votes[cId] && votes[cId] > winningThreshold);\n\n    if (winnerIds.length) {\n      // console.log('We have some winners!', { winnerIds });\n      return { winnerIds };\n    } else {\n      // console.log('No winner yet...');\n\n      let leastVotesReceived = candidateIds.reduce((result, cId) => {\n        const candidateVotes = votes[cId] || 0;\n        result = typeof result === 'number' ? result : candidateVotes;\n        result = result <= candidateVotes ? result : candidateVotes;\n        return result;\n      }, null);\n\n      // TODO: It would be nice to know which candidates actually got votes in the previous round.\n      let loserIds = candidates.map(c => c.id).filter(cId => (votes[cId] || 0) === leastVotesReceived);\n\n      let nextBallotsArray = [...ballotsArray];\n\n      // TODO: Need a tie-breaking strategy\n      if (loserIds.length) {\n        // console.log('We have some losers!', { loserIds });\n\n        // TODO: Remove losers and go again.\n\n        const nextCandidates = candidates.filter(candidate => loserIds.indexOf(candidate.id) < 0);\n        nextBallotsArray = nextBallotsArray.map(prevBallot => ({\n          ...prevBallot,\n          candidateRanks: prevBallot.candidateRanks.filter(cId => loserIds.indexOf(cId) < 0),\n        }));\n\n        // console.log({ nextCandidates, nextBallotsArray });\n\n        try {\n          return Results.calculateResults({\n            ballotsArray: nextBallotsArray,\n            candidates: nextCandidates,\n            roundIndex: roundIndex + 1,\n            winningThreshold,\n          });\n        } catch (e) {\n          if (e.message === candidatesEliminatedErrorMessage) {\n            return { winnerIds: candidateIds };\n          }\n\n          throw e;\n        }\n\n      } else {\n        throw new Error('Couldn\\'t determine losers to remove for next round');\n      }\n    }\n  }\n\n  state = {\n    activePoll: {},\n    errorMessage: '',\n    prevActivePollId: null,\n    winnerIds: [],\n  }\n\n  componentDidMount() {\n    this.updateActivePollFromProps();\n  }\n\n  componentDidUpdate() {\n    this.updateActivePollFromProps();\n  }\n\n  updateActivePollFromProps = () => {\n    const { polls } = this.props;\n    const activePollId = this.context;\n    const { prevActivePollId } = this.state;\n\n    if (activePollId !== prevActivePollId) {\n      this.setState({\n        prevActivePollId: activePollId,\n        activePoll: (activePollId && polls && polls[activePollId]) || {}\n      });\n    }\n  }\n\n  calculateWinner = () => {}\n\n  handleClickCalculateWinners = () => {\n    const { ballots } = this.props;\n    const { activePoll: poll } = this.state;\n\n    const ballotsArray = Results.getPollSortedBallotsArray({\n      poll,\n      ballots,\n    });\n\n    const plurality = ballotsArray.length / 2;\n    const candidates = [...poll.candidates];\n\n    this.setState({\n      errorMessage: '',\n      winnerIds: [],\n    });\n\n    try {\n      const { winnerIds } = Results.calculateResults({\n        ballotsArray,\n        candidates,\n        winningThreshold: plurality,\n      });\n\n      this.setState({\n        winnerIds,\n      });\n    } catch (e) {\n      this.setState({\n        errorMessage: e.message,\n      });\n    }\n  }\n\n  render() {\n    const { ballots } = this.props;\n\n    const {\n      activePoll: poll,\n      errorMessage,\n      winnerIds,\n    } = this.state;\n\n    const sortedBallotsArray = Results.getPollSortedBallotsArray({\n      poll,\n      ballots,\n    });\n\n    return (\n      <div>\n        <h1>\n          &lt;Results /&gt;\n        </h1>\n        <h2>{sortedBallotsArray.length} ballot{sortedBallotsArray.length === 1 ? '' : 's'}</h2>\n        <ul>\n          {sortedBallotsArray.map(ballot => (\n            <li key={ballot.id}>\n              <em>{new Date(ballot.dateSubmitted).toLocaleString()}</em>\n              <br />\n              <pre>{JSON.stringify(ballot)}</pre>\n            </li>\n          ))}\n        </ul>\n        <button onClick={this.handleClickCalculateWinners}>\n          Calculate winners\n        </button>\n        { !!winnerIds.length &&\n          <div className=\"Results__winners\">\n            <strong>Congratulations!</strong>\n              <ul>\n                {winnerIds.map(winnerId => {\n                  const winner = poll.candidates.find(c => c.id === winnerId);\n                  if (winner) {\n                    return <li key={winner.id}>\n                      {winner.name}\n                    </li>\n                  }\n\n                  return null;\n                })}\n              </ul>\n          </div>\n        }\n        {errorMessage &&\n          <div className=\"Results__errorMessage\">\n            {errorMessage}\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nResults.contextType = ActivePollIdContext;\n\nResults.propTypes = {\n  polls: PropTypes.shape(),\n  ballots: PropTypes.array,\n};\n\nexport default Results;\n","import Results from './Results';\n\nexport default Results;\n","import Body from './Body';\n\nexport default Body;\n","import React, { Component } from 'react';\n\nimport ActivePollChooser from '../ActivePollChooser';\nimport ActivePollIdProvider from '../ActivePollIdProvider';\nimport PollForm from '../PollForm';\nimport Ballot from '../Ballot';\nimport PollsProvider from '../PollsProvider';\nimport BallotsProvider from '../BallotsProvider';\nimport Results from '../Results';\n\nclass Body extends Component {\n  state = {\n    tab: 'pollForm',\n  }\n\n  handleClickSetTab = (nextTab) => (event) => this.setState({ tab: nextTab });\n\n  render() {\n    const { auth, ...passedProps } = this.props;\n    const { tab } = this.state;\n\n    return (\n    <div {...passedProps}>\n      <div className=\"tabs\">\n        <button\n          className=\"tab\"\n          onClick={this.handleClickSetTab('pollForm')}\n        >\n          Poll editor\n        </button>\n        <button\n          className=\"tab\"\n          onClick={this.handleClickSetTab('ballot')}\n        >\n          Ballot\n        </button>\n        <button\n          className=\"tab\"\n          onClick={this.handleClickSetTab('results')}\n        >\n          Results\n        </button>\n      </div>\n      {tab === 'pollForm' &&\n        <PollsProvider>\n          <ActivePollIdProvider>\n            <ActivePollChooser/>\n            <PollForm/>\n          </ActivePollIdProvider>\n        </PollsProvider>\n      }\n      {tab === 'ballot' &&\n        <PollsProvider>\n          <ActivePollIdProvider>\n            <ActivePollChooser />\n            <BallotsProvider>\n              <Ballot/>\n            </BallotsProvider>\n          </ActivePollIdProvider>\n        </PollsProvider>\n      }\n      {tab === 'results' &&\n        <PollsProvider>\n          <ActivePollIdProvider>\n            <ActivePollChooser/>\n            <BallotsProvider>\n              <Results/>\n            </BallotsProvider>\n          </ActivePollIdProvider>\n        </PollsProvider>\n      }\n    </div>\n  );\n  }\n}\n\nexport default Body;\n","import React, { Component } from 'react';\nimport './App.css';\n// import { Provider } from 'react-redux';\n// import { createStore, combineReducers, compose } from 'redux';\n// import { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase';\n// import firebase from 'firebase';\n\nimport Body from './Body';\n\n// // Firebase config\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyBdsGFx0j9svg0lfxEHqiWoiUuFywN6tSg\",\n//   authDomain: \"ranked-choice-voting-805a0.firebaseapp.com\",\n//   databaseURL: \"https://ranked-choice-voting-805a0.firebaseio.com\",\n//   projectId: \"ranked-choice-voting-805a0\",\n//   storageBucket: \"ranked-choice-voting-805a0.appspot.com\",\n//   messagingSenderId: \"860983913109\"\n// }\n\n// // react-redux-firebase config\n// const rrfConfig = {\n//   userProfile: 'users',\n//   // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n// }\n\n// Initialize firebase instance\n// firebase.initializeApp(firebaseConfig);\n\n// // Add reactReduxFirebase enhancer when making store creator\n// const createStoreWithFirebase = compose(\n//   reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\n//   // reduxFirestore(firebase) // <- needed if using firestore\n// )(createStore);\n\n// // Add firebase to reducers\n// const rootReducer = combineReducers({\n//   firebase: firebaseReducer,\n//   // firestore: firestoreReducer // <- needed if using firestore\n// });\n\n// // Create store with reducers and initial state\n// const initialState = {}\n// // const store = createStoreWithFirebase(rootReducer, initialState);\n\nclass App extends Component {\n  render() {\n  //   return (\n  //     <Provider store={store}>\n  //       <div className=\"App\">\n  //         <Body/>\n  //       </div>\n  //     </Provider>\n  //   );\n\n  return (\n      <div className=\"App\">\n        <Body/>\n      </div>\n    );\n  }\n}\n\nexport const AppSimple = () => (<div> Boom </div>);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}