{"version":3,"sources":["Login/Login.js","PollForm/index.js","PollForm/PollForm.js","Ballot/index.js","PollsProvider/PollsProvider.js","PollsProvider/index.js","BallotsProvider/index.js","Results/Results.js","Results/index.js","Body/index.js","Body/Body.js","App.js","serviceWorker.js","index.js"],"names":["Login","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleClickButton","props","firebase","login","provider","type","inherits","createClass","key","value","auth","react_default","a","createElement","onClick","isLoaded","isEmpty","JSON","stringify","Component","compose","withFirebase","connect","_ref","PollForm","state","polls","newCandidateName","updatePolls","nextPolls","prevPolls","setState","getCandidateById","_ref2","candidateId","candidates","find","candidate","id","getCandidateByName","_ref3","candidateName","name","getAddCandidateDisabled","activePoll","submitAddCandidateForm","event","stopPropagation","preventDefault","addCandidate","_this$props","setPoll","objectSpread","toConsumableArray","shortid","generate","changeNewCandidateNameInput","target","prevState","submitForm","setPolls","renderNewCandidateForm","disabled","onSubmit","htmlFor","placeholder","onChange","handleChangeCandidateNameInput","prevCandidate","nextCandidateName","prevCandidates","nextCandidates","splice","indexOf","defineProperty","renderCandidates","currentCandidates","map","handleChangePollNameInput","nextName","handleChangeEnabledCheckbox","enabled","checked","prevProps","handleChangePollSelect","defaultValue","Ballot","ballots","candidateRanks","voterName","updateShuffledCandidatesFromProps","_ref$prevProps","_ref$nextProps","nextProps","_ref$forceUpdate","forceUpdate","nextActivePoll","prevActivePoll","_ref2$candidates","_ref3$candidates","shuffledCandidates","sort","Math","random","onChangeCandidateRankInput","prevCandidateRanks","nextRank","nextCandidateRanks","handleChangeVotertNameInput","handleSubmitBallotForm","_this$props$activePol","_this$props$activePol2","pollId","addBallot","_this$state","dateSubmitted","Date","valueOf","submitted","_this2","_this$state2","_ref4$candidates","i","min","max","step","PollsProvider","pollsString","window","localStorage","setItem","poll","defaultBallot","getActivePoll","firstPollKey","keys","defaultPoll","updatePollsFromLocalStorage","children","passedProps","objectWithoutProperties","React","cloneElement","addPoll","dateCreated","dateUpdated","dateEnabled","savedPolls","getItem","parse","e","console","warn","BallotsProvider","setBallots","ballotsString","ballot","prevBallots","getBallotsFromLocalStorage","savedBallots","Results","winnerIds","errorMessage","calculateWinner","handleClickCalculateWinners","ballotsArray","getActivePollSortedBallotsArray","plurality","calculateResults","winningThreshold","message","_this$props2","sortedBallotsArray","toLocaleString","className","winnerId","winner","c","entries","filter","slicedToArray","_ref4","_ref5","_ref6","_ref7","ballot2","_ref8","_ref9","getRoundVotes","_ref10","_ref10$round","round","reduce","result","chosenCandidateId","_ref11","_ref11$roundIndex","roundIndex","votes","log","candidateIds","Error","cId","leastVotesReceived","candidateVotes","loserIds","nextBallotsArray","prevBallot","Body","tab","handleClickSetTab","nextTab","src_PollsProvider","src_PollForm","src_BallotsProvider","src_Ballot","src_Results","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","reactReduxFirebase","userProfile","createStore","createStoreWithFirebase","combineReducers","firebaseReducer","App","es","src_Body","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86c6a9e0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withFirebase, isLoaded, isEmpty } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nexport class Login extends Component {\n    handleClickButton = () => {\n      this.props.firebase.login({ provider: 'google', type: 'popup' });\n    }\n\n    render() {\n      const { auth } = this.props;\n\n      return <div {...this.props}>\n        <button onClick={this.handleClickButton}>\n          Click me!\n          {\n            !isLoaded(auth)\n            ? <span>Loading...</span>\n            : isEmpty(auth)\n              ? <span>Not Authed</span>\n              : <pre>{JSON.stringify(auth, null, 2)}</pre>\n          }\n        </button>\n      </div>;\n    }\n};\n\nexport const ConnectedLogin = compose(\n  withFirebase,\n  connect(({ firebase: { auth } }) => ({ auth }))\n)(Login);\n\nexport default ConnectedLogin;\n","import PollForm from './PollForm';\n\nexport default PollForm;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nclass Form extends Component {\n   state = {\n    polls: {},\n    newCandidateName: '',\n  }\n\n  componentDidMount() {\n    const { polls: nextPolls } = this.props;\n    const { polls: prevPolls } = this.state;\n\n    this.updatePolls({\n      nextPolls,\n      prevPolls,\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { polls: nextPolls } = this.props;\n    const { polls: prevPolls } = prevProps;\n\n    this.updatePolls({\n      nextPolls,\n      prevPolls,\n    });\n  }\n\n  updatePolls = ({\n    nextPolls,\n    prevPolls,\n  }) => {\n    if (nextPolls && JSON.stringify(prevPolls) !== JSON.stringify(nextPolls)) {\n      this.setState({ polls: nextPolls });\n    }\n  }\n\n  getCandidateById = ({ candidateId, candidates }) => candidates.find(candidate => candidate.id === candidateId)\n  getCandidateByName = ({ candidateName, candidates }) => candidates.find(candidate => candidate.name === candidateName)\n\n  getAddCandidateDisabled = () => {\n    const { candidates } = this.props.activePoll;\n    const { newCandidateName } = this.state;\n\n    return !newCandidateName || this.getCandidateByName({\n      candidateName: newCandidateName,\n      candidates,\n    });\n\n  }\n\n  submitAddCandidateForm = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    return this.addCandidate();\n  }\n\n  addCandidate = () => {\n    const {\n      activePoll,\n      setPoll,\n    } = this.props;\n\n    const { newCandidateName } = this.state;\n\n    if (this.getAddCandidateDisabled()) {\n      return;\n    }\n\n    this.setState({\n      newCandidateName: '',\n    })\n\n    setPoll({\n      ...activePoll,\n      candidates: [\n        ...activePoll.candidates,\n        {\n          name: newCandidateName,\n          id: shortid.generate(),\n        },\n      ]\n    });\n  }\n\n  changeNewCandidateNameInput = (event) => {\n    const newCandidateName = event.target.value;\n\n    this.setState(prevState => ({\n      ...prevState,\n      newCandidateName,\n    }));\n  };\n\n  submitForm = (event) => {\n    const { setPolls } = this.props;\n    const { polls } = this.state;\n    setPolls(polls);\n    event.preventDefault();\n  }\n\n  renderNewCandidateForm = () => {\n    const { newCandidateName } = this.state;\n\n    return (\n      <li key=\"newCandidate\">\n        <form\n          disabled={this.getAddCandidateDisabled()}\n          onSubmit={this.submitAddCandidateForm}\n        >\n          <label htmlFor=\"newCandidate\">\n            New candidate\n          </label>\n          <input\n            id=\"newCandidate\"\n            placeholder=\"Candidate name\"\n            type=\"text\"\n            value={newCandidateName}\n            onChange={this.changeNewCandidateNameInput}\n          />\n          <button disabled={this.getAddCandidateDisabled()}>\n            Add candidate\n          </button>\n        </form>\n      </li>\n    );\n  }\n\n  handleChangeCandidateNameInput = (prevCandidate) => (event) => {\n    const { activePoll: { candidates } } = this.props;\n    const nextCandidateName = event.target.value;\n\n    if (!nextCandidateName || this.getCandidateByName({\n      candidates,\n      candidateName: nextCandidateName,\n    })) {\n      return;\n    }\n\n    this.setState((prevState) => {\n      const { activePoll } = this.props;\n      const { polls: prevPolls } = prevState;\n      const { candidates: prevCandidates } = activePoll;\n\n      const nextCandidates = [...prevCandidates];\n\n      nextCandidates.splice(prevCandidates.indexOf(prevCandidate), 1, {\n        ...prevCandidate,\n        name: nextCandidateName,\n      });\n\n      return ({\n        polls: {\n          ...prevPolls,\n          [activePoll.id]: {\n            ...activePoll,\n            candidates: nextCandidates,\n          },\n        },\n      });\n    });\n\n    event.stopPropagation();\n  }\n\n  renderCandidates = () => {\n    const { activePoll } = this.props;\n    const { candidates } = activePoll;\n\n    const currentCandidates = candidates.map(candidate => (\n      <li key={candidate.id}>\n        <label htmlFor={candidate.id}>\n          Candidate\n        </label>\n        <input\n          id={candidate.id}\n          onChange={this.handleChangeCandidateNameInput(candidate)}\n          placeholder=\"Candidate name\"\n          type=\"text\"\n          value={candidate.name}\n        />\n      </li>\n    ));\n\n    return [\n      ...currentCandidates,\n      this.renderNewCandidateForm()\n    ];\n  }\n\n  handleChangePollNameInput = (event) => {\n    const { activePoll } = this.props;\n    const { polls } = this.state;\n    const nextName = event.target.value || activePoll.name;\n\n    this.setState(prevState => ({\n      polls: {\n        ...polls,\n        [activePoll.id]: {\n          ...activePoll,\n          name: nextName,\n        },\n      },\n    }));\n  }\n\n  handleChangeEnabledCheckbox = (event) => {\n    const { activePoll } = this.props;\n    const enabled = event.target.checked;\n\n    this.setState(prevState => ({\n      polls: {\n        ...prevState.polls,\n        [activePoll.id]: {\n          ...activePoll,\n          enabled,\n        },\n      },\n    }));\n  }\n\n  render() {\n    const { activePoll } = this.props;\n\n    const {\n      enabled,\n      name,\n    } = activePoll;\n\n    return (\n      <div>\n        <label htmlFor=\"pollSelect\">\n          Select poll\n        </label>\n        <select\n          id=\"pollSelect\"\n          onChange={this.handleChangePollSelect}\n          defaultValue=\"placeholder\"\n        >\n          <option\n            disabled\n            value=\"placeholder\"\n          >\n            Select a poll\n          </option>\n          <option\n            value=\"create\"\n          >\n            Create a new poll\n          </option>\n        </select>\n        <form id=\"pollForm\" onSubmit={this.submitForm}>\n          <h1>\n            Poll\n          </h1>\n          <section>\n            <label htmlFor=\"name\">\n              Poll name\n            </label>\n            <input\n              type=\"text\"\n              onChange={this.handleChangePollNameInput}\n              value={name}\n            />\n          </section>\n        </form>\n        <section>\n          <ul>\n            {this.renderCandidates()}\n          </ul>\n        </section>\n        <section>\n          <label htmlFor=\"toggleEnabled\">\n            <input\n              id=\"toggleEnabled\"\n              onChange={this.handleChangeEnabledCheckbox}\n              type=\"checkbox\"\n              checked={enabled}\n            />\n              Enable\n          </label>\n        </section>\n        <button type=\"button\">\n          Cancel\n        </button>\n        <button\n          onClick={this.submitForm}\n          type=\"button\"\n        >\n          Save\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nexport class Ballot extends Component {\n  state = {\n    ballots: [],\n    candidateRanks: [],\n    voterName: '',\n  }\n\n  componentDidMount() {\n    this.updateShuffledCandidatesFromProps({ nextProps: this.props });\n  }\n\n  componentDidUpdate(prevProps) {\n    this.updateShuffledCandidatesFromProps({ nextProps: this.props, prevProps: prevProps });\n  }\n\n  updateShuffledCandidatesFromProps = ({ prevProps = {}, nextProps = {}, forceUpdate = false }) => {\n    const { activePoll: nextActivePoll } = nextProps;\n    const { activePoll: prevActivePoll } = prevProps;\n    const { candidates: nextCandidates = [] } = nextActivePoll || {};\n    const { candidates: prevCandidates = [] } = prevActivePoll || {};\n\n    if (JSON.stringify(nextCandidates) !== JSON.stringify(prevCandidates) || forceUpdate) {\n      const shuffledCandidates = [...nextCandidates];\n      shuffledCandidates.sort(() => Math.random() > 0.5 ? 1 : -1);\n      const candidateRanks = shuffledCandidates.map(candidate => candidate.id);\n\n      this.setState({ candidateRanks });\n    }\n  }\n\n  onChangeCandidateRankInput = candidateId => event => {\n    const { candidateRanks: prevCandidateRanks } = this.state;\n    const nextRank = event.target.value;\n\n    if (nextRank) {\n      const nextCandidateRanks = [...prevCandidateRanks];\n      nextCandidateRanks.splice(prevCandidateRanks.indexOf(candidateId), 1);\n      nextCandidateRanks.splice(nextRank, 0, candidateId);\n      this.setState({ candidateRanks: nextCandidateRanks });\n    }\n  }\n\n  handleChangeVotertNameInput = event => this.setState({ voterName: event.target.value });\n\n  handleSubmitBallotForm = (event) => {\n    const {\n      activePoll: { id: pollId = null } = {},\n      addBallot,\n    } = this.props;\n\n    const {\n      candidateRanks,\n      voterName,\n    } = this.state;\n\n    event.preventDefault();\n\n    addBallot({\n      candidateRanks,\n      dateSubmitted: new Date().valueOf(),\n      submitted: true,\n      id: shortid.generate(),\n      pollId,\n      voterName,\n    });\n\n    this.setState({ voterName: '' });\n    this.updateShuffledCandidatesFromProps({ nextProps: this.props, forceUpdate: true });\n  }\n\n  render() {\n    const { activePoll } = this.props;\n    const {\n      candidateRanks,\n      voterName,\n    } = this.state;\n\n    const { candidates = [] } = activePoll || {};\n\n    return (\n      <div>\n        <h1>\n          Ballot\n        </h1>\n        <form onSubmit={this.handleSubmitBallotForm}>\n          <section>\n            <label htmlFor=\"voterName\">\n              Your name\n            </label>\n            <input\n              id=\"voterName\"\n              type=\"text\"\n              onChange={this.handleChangeVotertNameInput}\n              value={voterName}\n            />\n          </section>\n          <section>\n            <ul>\n              {candidateRanks.map((candidateId, i) => {\n                const candidate = candidates.find(candidate => candidate.id ===candidateId);\n\n                return (\n                  <li key={candidate.id}>\n                    <label htmlFor={`candidateRankInput--${candidate.id}`}>\n                      Candidate rank\n                      <br/>\n                      <strong>\n                        {candidate.name}\n                      </strong>\n                    </label>\n                    <input\n                      id={`candidateRankInput--${candidate.id}`}\n                      min=\"0\"\n                      max={candidates.length - 1}\n                      step=\"1\"\n                      type=\"number\"\n                      value={i}\n                      onChange={this.onChangeCandidateRankInput(candidate.id)}\n                    />\n                  </li>\n                );\n              })}\n            </ul>\n          </section>\n          <section>\n            <button\n              type=\"submit\"\n              disabled={!voterName}\n            >\n              Submit\n            </button>\n          </section>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Ballot;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nclass PollsProvider extends Component {\n  static defaultPoll = {\n    candidates: [],\n    enabled: false,\n    id: shortid.generate(),\n    name: '',\n    dateCreated: null,\n    dateUpdated: null,\n    dateEnabled: null,\n  };\n\n  static updatePollsFromLocalStorage = () => {\n    const savedPolls = window.localStorage.getItem('polls');\n\n    let polls = {};\n\n    try {\n      polls = JSON.parse(savedPolls) || polls;\n    } catch(e) {\n      console.warn('Couldn\\'t load polls, they\\'ll be overwritten');\n    }\n\n    return polls;\n  }\n\n  state = {\n    polls: {},\n  }\n\n  componentDidMount() {\n    this.setState({ polls: PollsProvider.updatePollsFromLocalStorage()});\n  }\n\n  setPolls = (polls) => {\n    this.setState({ polls });\n    const pollsString = JSON.stringify(polls);\n    window.localStorage.setItem('polls', pollsString);\n  }\n\n  setPoll = (poll) => {\n    const { polls: prevPolls } = this.state;\n\n    this.setPolls({\n      ...prevPolls,\n      [poll.id]: {\n        ...PollsProvider.defaultBallot,\n        ...prevPolls[poll.id],\n        ...poll,\n      },\n    });\n  }\n\n  getActivePoll = () => {\n    const { polls } = this.state;\n    const firstPollKey = Object.keys(polls).length ? Object.keys(polls)[0] : null;\n\n    if (firstPollKey) {\n      return polls[firstPollKey];\n    }\n\n    return { ...PollsProvider.defaultPoll };\n  }\n\n  render() {\n    const {\n      children,\n      ...passedProps\n    } = this.props;\n\n    const { polls } = this.state;\n\n    return React.cloneElement(children, {\n      ...passedProps,\n      activePoll: this.getActivePoll(),\n      addPoll: this.addPoll,\n      polls,\n      setPolls: this.setPolls,\n      setPoll: this.setPoll,\n    });\n  }\n}\n\nexport default PollsProvider;\n","import PollsProvider from './PollsProvider';\n\nexport default PollsProvider;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nexport class BallotsProvider extends Component {\n  static defaultBallot = {\n    candidateRanks: [],\n    dateSubmitted: null,\n    submitted: false,\n    id: shortid.generate(),\n    pollId: '',\n    voterName: '',\n  };\n\n  static getBallotsFromLocalStorage = () => {\n    const savedBallots = window.localStorage.getItem('ballots');\n\n    let ballots = {};\n\n    try {\n      ballots = JSON.parse(savedBallots) || ballots;\n    } catch(e) {\n      console.warn('Couldn\\'t load ballots, they\\'ll be overwritten');\n    }\n\n    return ballots;\n  }\n\n  state = {\n   ballots: {},\n }\n\n  componentDidMount() {\n    this.setState({ ballots: BallotsProvider.getBallotsFromLocalStorage()});\n  }\n\n  setBallots = (ballots) => {\n    this.setState({ ballots });\n    const ballotsString = JSON.stringify(ballots);\n    window.localStorage.setItem('ballots', ballotsString);\n  }\n\n  addBallot = (ballot) => {\n    const { ballots: prevBallots } = this.state;\n\n    this.setBallots({\n      ...prevBallots,\n      [ballot.id]: {\n        ...BallotsProvider.defaultBallot,\n        ...prevBallots[ballot.id],\n        ...ballot,\n      },\n    });\n  }\n\n  render() {\n    const {\n      children,\n      ...passedProps\n    } = this.props;\n\n    const { ballots } = this.state;\n\n    return React.cloneElement(children, {\n      ...passedProps,\n      ballots,\n      addBallot: this.addBallot,\n    });\n  }\n}\n\nexport default BallotsProvider;\n","import React, { Component } from 'react';\n\nconst candidatesEliminatedErrorMessage = 'All candidates have been eliminated.';\nconst candidatesMissingErrorMessage = 'Coulnd\\'t find any candidates.';\n\nclass Results extends Component {\n  static getActivePollSortedBallotsArray = ({ poll, ballots}) => {\n    const sortedBallotsArray = Object.entries(ballots)\n      .filter(([id, ballot]) => ballot.pollId === poll.id)\n      .sort(([id, ballot], [id2, ballot2]) => ballot.dateSubmitted > ballot2.dateSubmitted ? -1 : 1)\n      .map(([id, ballot]) => {\n        return ballot;\n      });\n\n    return sortedBallotsArray;\n  }\n\n  static getRoundVotes = ({ ballotsArray, round = 0 }) => {\n    return ballotsArray.reduce((result, ballot) => {\n      const { candidateRanks } = ballot;\n\n      if (candidateRanks.length > round) {\n        const chosenCandidateId = candidateRanks[round];\n        result[chosenCandidateId] = (result[chosenCandidateId] || 0) + 1;\n      }\n\n      return result;\n    }, {});\n  }\n\n  static calculateResults = ({\n    ballotsArray,\n    candidates,\n    roundIndex = 1,\n    winningThreshold,\n  }) => {\n    // TODO: Second round should be transferrable votes. not second round of voting\n    const votes = Results.getRoundVotes({ ballotsArray });\n\n    console.log('calculateResults', { candidates, ballotsArray, winningThreshold, roundIndex, votes });\n    const candidateIds = candidates.map(c => c.id);\n\n    if (!candidateIds.length && roundIndex === 1) {\n      throw new Error(candidatesMissingErrorMessage);\n    } else if (!candidateIds.length) {\n      throw new Error(candidatesEliminatedErrorMessage);\n    }\n\n    const winnerIds = candidateIds.filter(cId => votes[cId] && votes[cId] > winningThreshold);\n\n    if (winnerIds.length) {\n      console.log('We have some winners!', { winnerIds });\n      return { winnerIds };\n    } else {\n      console.log('No winner yet...');\n\n      let leastVotesReceived = candidateIds.reduce((result, cId) => {\n        const candidateVotes = votes[cId] || 0;\n        result = typeof result === 'number' ? result : candidateVotes;\n        result = result <= candidateVotes ? result : candidateVotes;\n        return result;\n      }, null);\n\n      // TODO: It would be nice to know which candidates actually got votes in the previous round.\n      let loserIds = candidates.map(c => c.id).filter(cId => (votes[cId] || 0) === leastVotesReceived);\n\n      let nextBallotsArray = [...ballotsArray];\n\n      // TODO: Need a tie-breaking strategy\n      if (loserIds.length) {\n        console.log('We have some losers!', { loserIds });\n\n        // TODO: Remove losers and go again.\n\n        const nextCandidates = candidates.filter(candidate => loserIds.indexOf(candidate.id) < 0);\n        nextBallotsArray = nextBallotsArray.map(prevBallot => ({\n          ...prevBallot,\n          candidateRanks: prevBallot.candidateRanks.filter(cId => loserIds.indexOf(cId) < 0),\n        }));\n\n        console.log({ nextCandidates, nextBallotsArray });\n\n        try {\n          return Results.calculateResults({\n            ballotsArray: nextBallotsArray,\n            candidates: nextCandidates,\n            roundIndex: roundIndex + 1,\n            winningThreshold,\n          });\n        } catch (e) {\n          if (e.message === candidatesEliminatedErrorMessage) {\n            return { winnerIds: candidateIds };\n          }\n\n          throw e;\n        }\n\n      } else {\n        throw new Error('Couldn\\'t determine losers to remove for next round');\n      }\n    }\n  }\n\n  state = {\n    winnerIds: [],\n    errorMessage: '',\n  }\n\n  calculateWinner = () => {}\n\n  handleClickCalculateWinners = () => {\n    const {\n      activePoll: poll,\n      ballots,\n    } = this.props;\n\n    const ballotsArray = Results.getActivePollSortedBallotsArray({\n      poll,\n      ballots,\n    });\n\n    const plurality = ballotsArray.length / 2;\n    const candidates = [...poll.candidates];\n\n    this.setState({\n      errorMessage: '',\n      winnerIds: [],\n    });\n\n    try {\n      const { winnerIds } = Results.calculateResults({\n        ballotsArray,\n        candidates,\n        winningThreshold: plurality,\n      });\n\n      this.setState({\n        winnerIds,\n      });\n    } catch (e) {\n      this.setState({\n        errorMessage: e.message,\n      });\n    }\n  }\n\n  render() {\n    const {\n      ballots,\n      activePoll: poll,\n    } = this.props;\n\n    const {\n      errorMessage,\n      winnerIds,\n    } = this.state;\n\n    const sortedBallotsArray = Results.getActivePollSortedBallotsArray({\n      poll,\n      ballots,\n    });\n\n    return (\n      <div>\n        <h1>\n          &lt;Results /&gt;\n        </h1>\n        <h2>{sortedBallotsArray.length} ballot{sortedBallotsArray.length === 1 ? '' : 's'}</h2>\n        <ul>\n          {sortedBallotsArray.map(ballot => (\n            <li key={ballot.id}>\n              <em>{new Date(ballot.dateSubmitted).toLocaleString()}</em>\n              <br />\n              <pre>{JSON.stringify(ballot)}</pre>\n            </li>\n          ))}\n        </ul>\n        <button onClick={this.handleClickCalculateWinners}>\n          Calculate winners\n        </button>\n        { !!winnerIds.length &&\n          <div className=\"Results__winners\">\n            <strong>Congratulations!</strong>\n              <ul>\n                {winnerIds.map(winnerId => {\n                  const winner = poll.candidates.find(c => c.id === winnerId);\n                  if (winner) {\n                    return <li key={winner.id}>\n                      {winner.name}\n                    </li>\n                  }\n\n                  return null;\n                })}\n              </ul>\n          </div>\n        }\n        {errorMessage &&\n          <div className=\"Results__errorMessage\">\n            {errorMessage}\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Results;\n","import Results from './Results';\n\nexport default Results;\n","import Body from './Body';\n\nexport default Body;\n","import React, { Component } from 'react';\nimport Login from '../Login';\nimport PollForm from '../PollForm';\nimport Ballot from '../Ballot';\nimport PollsProvider from '../PollsProvider';\nimport BallotsProvider from '../BallotsProvider';\nimport Results from '../Results';\n\nclass Body extends Component {\n  state = {\n    tab: 'pollForm',\n  }\n\n  handleClickSetTab = (nextTab) => (event) => this.setState({ tab: nextTab });\n\n  render() {\n    const { auth, ...passedProps } = this.props;\n    const { tab } = this.state;\n\n    return (\n    <div {...passedProps}>\n      <div className=\"tabs\">\n        <button\n          className=\"tab\"\n          onClick={this.handleClickSetTab('pollForm')}\n        >\n          Poll editor\n        </button>\n        <button\n          className=\"tab\"\n          onClick={this.handleClickSetTab('ballot')}\n        >\n          Ballot\n        </button>\n        <button\n          className=\"tab\"\n          onClick={this.handleClickSetTab('results')}\n        >\n          Results\n        </button>\n      </div>\n      {tab === 'pollForm' &&\n        <PollsProvider>\n          <PollForm/>\n        </PollsProvider>\n      }\n      {tab === 'ballot' &&\n        <PollsProvider>\n          <BallotsProvider>\n            <Ballot/>\n          </BallotsProvider>\n        </PollsProvider>\n      }\n      {tab === 'results' &&\n        <PollsProvider>\n          <BallotsProvider>\n            <Results/>\n          </BallotsProvider>\n        </PollsProvider>\n      }\n      {false && <Login />}\n    </div>\n  );;\n  }\n}\n\nexport default Body;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, compose } from 'redux';\nimport { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase';\nimport firebase from 'firebase';\n//\nimport Body from './Body';\n//\n// Firebase config\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBdsGFx0j9svg0lfxEHqiWoiUuFywN6tSg\",\n  authDomain: \"ranked-choice-voting-805a0.firebaseapp.com\",\n  databaseURL: \"https://ranked-choice-voting-805a0.firebaseio.com\",\n  projectId: \"ranked-choice-voting-805a0\",\n  storageBucket: \"ranked-choice-voting-805a0.appspot.com\",\n  messagingSenderId: \"860983913109\"\n}\n//\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: 'users',\n  // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n}\n//\n// Initialize firebase instance\nfirebase.initializeApp(firebaseConfig);\n//\n// Add reactReduxFirebase enhancer when making store creator\nconst createStoreWithFirebase = compose(\n  reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\n  // reduxFirestore(firebase) // <- needed if using firestore\n)(createStore);\n//\n// Add firebase to reducers\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  // firestore: firestoreReducer // <- needed if using firestore\n});\n//\n// Create store with reducers and initial state\nconst initialState = {}\nconst store = createStoreWithFirebase(rootReducer, initialState);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Body/>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport const AppSimple = () => (<div> Boom </div>);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}